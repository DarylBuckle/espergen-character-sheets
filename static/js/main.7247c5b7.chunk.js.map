{"version":3,"sources":["../../src/Components/AttackTable.tsx","../../src/Components/DeathSave.tsx","../../src/Components/FeatureTable.tsx","../../src/Components/ResistancesTable.tsx","../../src/Components/Skill.tsx","../../src/Components/StatBox.tsx","../../src/EsperGenCharacterStatsSheet.tsx","../../src/Components/GearTable.tsx","../../src/Components/VehiclesTable.tsx","../../src/EsperGenCharacterTraitsSheet.tsx","../../src/Components/TalentTable.tsx","../../src/Components/TechniqueTable.tsx","../../src/EsperGenCharacterTalentsSheet.tsx","App.tsx","index.tsx"],"names":["AttackTable","props","value","getValue","classes","className","React","style","width","key","index","type","v","onChange","updateValue","e","colSpan","DeathSave","cn","number","text","click","onClick","renderHex","paddingTop","FeatureTable","ResistancesTable","Skill","StatBox","modifier","isNaN","Number","modifierNum","Math","initialState","character","EsperGenCharacterStatsSheet","updateCharacter","oldCharacter","this","newCharacter","Object","getCharacter","state","render","fontSize","margin","abbreviation","label","name","str","valueSave","strSave","dex","dexSave","con","conSave","intSave","wis","wisSave","cha","chaSave","fontWeight","height","border","textAlign","verticalAlign","rows","marginBottom","padding","lineHeight","marginTop","specialFeatures","float","hint","skillAcrobatics","checked","skillAcrobaticsChecked","skillAstrophysics","skillAstrophysicsChecked","skillAthletics","skillAthleticsChecked","skillComputers","skillComputersChecked","skillDeception","skillDeceptionChecked","skillInsight","skillInsightChecked","skillIntimidation","skillIntimidationChecked","skillInvestigation","skillInvestigationChecked","skillLore","skillLoreChecked","skillMechanics","skillMechanicsChecked","skillMedicine","skillMedicineChecked","skillPerception","skillPerceptionChecked","skillPerformance","skillPerformanceChecked","skillPersuasion","skillPersuasionChecked","skillSlightOfHand","skillSlightOfHandChecked","skillStealth","skillStealthChecked","skillSurvival","skillSurvivalChecked","skillXenobiology","skillXenobiologyChecked","display","backgroundColor","attacks","borderColor","borderStyle","resistances","marginRight","valueSuccess","deathsaveSuccesses","valueFailure","deathsaveFailures","paddingBottom","Component","GearTable","VehiclesTable","EsperGenCharacterTraitsSheet","textTransform","htmlFor","id","profArmourLight","profArmourMedium","profArmourHeavy","profArmourShield","profWeaponSimple","profWeaponMartial","profWeaponOther","profWeaponOtherText","position","top","textIndent","gear1","vehicles","gear2","borderTop","TalentTable","TechniqueTable","max","used","EsperGenCharacterTalentsSheet","minHeight","marginLeft","maxName","techniqueSlots","usedName","techniqueSlotsUsed","level","primeTalents","tp","lvl1Talents","lvl2Talents","lvl3Talents","lvl4Talents","lvl5Talents","lvl6Talents","lvl7Talents","lvl8Talents","lvl9Talents","ScrollToTop","pathname","useLocation","useEffect","window","scrollTo","withRouter","useState","lsData","localStorage","getItem","JSON","parse","loadDefaultCharacter","setCharacter","navTop","setNavTop","pageYOffset","prevScrollpos","setPrevScrollpos","setLoading","search","characterToLoad","qs","ignoreQueryPrefix","axios","get","then","response","Array","isArray","data","Error","console","log","catch","error","statsSheet","onCharacterChanged","profileSheet","spellSheet","setItem","stringify","importCharacter","event","target","files","length","fr","FileReader","onload","result","json","alert","loadCharacter","readAsText","onscroll","currentScrollPos","onScroll","data-toggle","data-target","aria-controls","aria-expanded","aria-label","location","to","a","document","createElement","file","Blob","href","URL","createObjectURL","download","replace","toLowerCase","exportCharacter","accept","getElementById","print","exact","path","defaultRedirect","innerWidth","getDefaultRedirect","ReactDOM","basename"],"mappings":"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","file":"static/js/main.7247c5b7.chunk.js","sourcesContent":["import React from 'react'\n\nfunction AttackTable(props: {\n  onChange: (arg0: any, arg1: any) => void\n  name: string\n  value?: any\n  classes?: string\n  rows: number\n}) {\n  function updateValue(index: React.Key, field: string, v: string) {\n    const value = getValue().slice()\n    value[index][field] = v\n    props.onChange(props.name, value)\n  }\n\n  function getValue() {\n    let value = props.value\n    if (!value) {\n      value = []\n    }\n    while (value.length < props.rows) {\n      value.push({})\n    }\n    return value\n  }\n\n  let classes = 'espergen-table'\n  if (props.classes) {\n    classes += ' ' + props.classes\n  }\n\n  return (\n    <table className={classes}>\n      <thead>\n        <tr>\n          <th>Weapon</th>\n          <th style={{ width: '35px' }}>Prof.</th>\n          <th style={{ width: '70px' }}>Range</th>\n          <th style={{ width: '40px' }}>To Hit</th>\n          <th style={{ width: '70px' }}>Damage</th>\n          <th style={{ width: '70px' }}>Dmg. Type</th>\n        </tr>\n      </thead>\n      <tbody>\n        {getValue().map(\n          (\n            v: {\n              name: string | number | readonly string[] | undefined\n              prof: string | number | readonly string[] | undefined\n              range: string | number | readonly string[] | undefined\n              toHit: string | number | readonly string[] | undefined\n              damage: string | number | readonly string[] | undefined\n              damageType: string | number | readonly string[] | undefined\n              special: string | number | readonly string[] | undefined\n            },\n            index: string\n          ) => {\n            return [\n              <tr key={'espergen-table-row-' + props.name + index}>\n                <td>\n                  <input\n                    type='text'\n                    value={v.name ? v.name : ''}\n                    onChange={(e) => updateValue(index, 'name', e.target.value)}\n                  />\n                </td>\n                <td>\n                  <input\n                    type='text'\n                    value={v.prof ? v.prof : ''}\n                    onChange={(e) => updateValue(index, 'prof', e.target.value)}\n                  />\n                </td>\n                <td>\n                  <input\n                    type='text'\n                    value={v.range ? v.range : ''}\n                    onChange={(e) =>\n                      updateValue(index, 'range', e.target.value)\n                    }\n                  />\n                </td>\n                <td>\n                  <input\n                    type='text'\n                    value={v.toHit ? v.toHit : ''}\n                    onChange={(e) =>\n                      updateValue(index, 'toHit', e.target.value)\n                    }\n                  />\n                </td>\n                <td>\n                  <input\n                    type='text'\n                    value={v.damage ? v.damage : ''}\n                    onChange={(e) =>\n                      updateValue(index, 'damage', e.target.value)\n                    }\n                  />\n                </td>\n                <td>\n                  <input\n                    type='text'\n                    value={v.damageType ? v.damageType : ''}\n                    onChange={(e) =>\n                      updateValue(index, 'damageType', e.target.value)\n                    }\n                  />\n                </td>\n              </tr>,\n              <tr key={'espergen-table-row2-' + props.name + index}>\n                <td colSpan={6}>\n                  <label className='mb-0 mr-2'>Special</label>\n                  <input\n                    type='text'\n                    style={{ width: 'calc(100% - 50px' }}\n                    value={v.special ? v.special : ''}\n                    onChange={(e) =>\n                      updateValue(index, 'special', e.target.value)\n                    }\n                  />\n                </td>\n              </tr>\n            ]\n          }\n        )}\n      </tbody>\n    </table>\n  )\n}\n\nexport default AttackTable\n","import React from 'react'\n\nfunction DeathSave(props: {\n  classes?: string\n  label: React.ReactNode\n  valueSuccess?: number\n  valueFailure?: number\n  onChange: (arg0: any, arg1: number | null) => void\n  name: any\n}) {\n  let classes = 'espergen-deathsave'\n  if (props.classes) {\n    classes += ' ' + props.classes\n  }\n\n  function renderHex(\n    value: number | null | undefined,\n    number: number | null,\n    type: number | null\n  ) {\n    let cn = type && type > 0 ? 'deathsave' : 'deathsave fake'\n    if (type === 2) {\n      cn += ' failure'\n    }\n    if (value && number && value >= number) {\n      cn += ' active'\n    }\n    if (number === 2) {\n      cn += ' even'\n    }\n\n    let text = ''\n    let click: any = null\n    if (type && type > 0) {\n      text =\n        number === 1 ? 'I' : number === 2 ? 'II' : number === 3 ? 'III' : ''\n      click =\n        type === 1\n          ? () =>\n              props.onChange(\n                props.name + 'Successes',\n                value === number ? null : number\n              )\n          : () =>\n              props.onChange(\n                props.name + 'Failures',\n                value === number ? null : number\n              )\n    }\n\n    return (\n      <div className={cn} onClick={click}>\n        <div className='left' />\n        <div className='middle'>{text}</div>\n        <div className='right' />\n      </div>\n    )\n  }\n\n  return (\n    <div className={classes}>\n      <div className='deathsave-row'>\n        {renderHex(null, 1, 0)}\n        {renderHex(props.valueSuccess, 2, 1)}\n        {renderHex(null, 3, 0)}\n      </div>\n      <div className='deathsave-row'>\n        {renderHex(props.valueSuccess, 1, 1)}\n        {renderHex(null, 2, 0)}\n        {renderHex(props.valueSuccess, 3, 1)}\n        <label className='ml-3 mb-0' style={{ paddingTop: '5px' }}>\n          Survive\n        </label>\n      </div>\n      <div className='deathsave-row'>\n        {renderHex(props.valueFailure, 1, 2)}\n        {renderHex(props.valueFailure, 2, 2)}\n        {renderHex(props.valueFailure, 3, 2)}\n        <label className='ml-3 mb-0' style={{ paddingTop: '5px' }}>\n          Perish\n        </label>\n      </div>\n    </div>\n  )\n}\n\nexport default DeathSave\n","import React from 'react'\n\nfunction FeatureTable(props: {\n  onChange: (arg0: any, arg1: any) => void\n  name: string\n  value?: any\n  classes?: string\n  rows: number\n}) {\n  function updateValue(index: React.Key, field: string, v: string) {\n    const value = getValue().slice()\n    value[index][field] = v\n    props.onChange(props.name, value)\n  }\n\n  function getValue() {\n    let value = props.value\n    if (!value) {\n      value = []\n    }\n    while (value.length < props.rows) {\n      value.push({})\n    }\n    return value\n  }\n\n  let classes = 'espergen-table'\n  if (props.classes) {\n    classes += ' ' + props.classes\n  }\n\n  return (\n    <table className={classes}>\n      <thead>\n        <tr>\n          <th>Feature</th>\n          <th style={{ width: '70px' }}>Max Use</th>\n          <th style={{ width: '70px' }}>Recovery</th>\n          <th style={{ width: '50px' }}>Used</th>\n        </tr>\n      </thead>\n      <tbody>\n        {getValue().map(\n          (\n            v: {\n              name: string | number | readonly string[] | undefined\n              maxUse: string | number | readonly string[] | undefined\n              recovery: string | number | readonly string[] | undefined\n              used: string | number | readonly string[] | undefined\n            },\n            index: string\n          ) => {\n            return (\n              <tr key={'espergen-table-row-' + props.name + index}>\n                <td>\n                  <input\n                    type='text'\n                    value={v.name ? v.name : ''}\n                    onChange={(e) => updateValue(index, 'name', e.target.value)}\n                  />\n                </td>\n                <td>\n                  <input\n                    type='text'\n                    value={v.maxUse ? v.maxUse : ''}\n                    onChange={(e) =>\n                      updateValue(index, 'maxUse', e.target.value)\n                    }\n                  />\n                </td>\n                <td>\n                  <input\n                    type='text'\n                    value={v.recovery ? v.recovery : ''}\n                    onChange={(e) =>\n                      updateValue(index, 'recovery', e.target.value)\n                    }\n                  />\n                </td>\n                <td>\n                  <input\n                    type='text'\n                    value={v.used ? v.used : ''}\n                    onChange={(e) => updateValue(index, 'used', e.target.value)}\n                  />\n                </td>\n              </tr>\n            )\n          }\n        )}\n      </tbody>\n    </table>\n  )\n}\n\nexport default FeatureTable\n","import React from 'react'\n\nfunction ResistancesTable(props: {\n  onChange: (arg0: any, arg1: any) => void\n  name: string\n  value?: any\n  classes?: string\n  rows: number\n}) {\n  function updateValue(index: React.Key, field: string, v: string) {\n    const value = getValue().slice()\n    value[index][field] = v\n    props.onChange(props.name, value)\n  }\n\n  function getValue() {\n    let value = props.value\n    if (!value) {\n      value = []\n    }\n    while (value.length < props.rows) {\n      value.push({})\n    }\n    return value\n  }\n\n  let classes = 'espergen-table'\n  if (props.classes) {\n    classes += ' ' + props.classes\n  }\n\n  return (\n    <table className={classes}>\n      <tbody>\n        {getValue().map(\n          (\n            v: {\n              name: string | number | readonly string[] | undefined\n            },\n            index: string\n          ) => {\n            return (\n              <tr key={'espergen-table-row-' + props.name + index}>\n                <td>\n                  <input\n                    type='text'\n                    value={v.name ? v.name : ''}\n                    onChange={(e) => updateValue(index, 'name', e.target.value)}\n                  />\n                </td>\n              </tr>\n            )\n          }\n        )}\n      </tbody>\n    </table>\n  )\n}\n\nexport default ResistancesTable\n","import React from 'react'\n\nfunction Skill(props: {\n  classes?: string\n  checked?: boolean\n  onChange: (arg0: string, arg1: string | boolean) => void\n  name: string\n  value: string | number | readonly string[] | undefined\n  label?: React.ReactNode\n  hint?: React.ReactNode\n}) {\n  let classes = 'espergen-skill'\n  if (props.classes) {\n    classes += ' ' + props.classes\n  }\n\n  return (\n    <div className={classes}>\n      <input\n        type='text'\n        value={props.value ? props.value : ''}\n        onChange={(e) => props.onChange(props.name, e.target.value)}\n      />\n      <label>{props.label}</label>\n      {props.hint ? (\n        <span className='espergen-skill-hint'>{props.hint}</span>\n      ) : null}\n      <div\n        className={\n          props.checked\n            ? 'espergen-skill-circle active'\n            : 'espergen-skill-circle'\n        }\n        onClick={() => props.onChange(props.name + 'Checked', !props.checked)}\n      />\n    </div>\n  )\n}\n\nexport default Skill\n","import React from 'react'\n\nfunction StatBox(props: {\n  classes?: string\n  value: string | number | readonly string[] | undefined\n  valueSave: string | number | readonly string[] | undefined\n  abbreviation: string\n  label: React.ReactNode\n  onChange: (arg0: any, arg1: string) => void\n  name: any\n}) {\n  let classes = 'espergen-statbox'\n  if (props.classes) {\n    classes += ' ' + props.classes\n  }\n\n  let modifier: string = ''\n  if (props.value && !isNaN(Number(props.value))) {\n    const modifierNum = Math.floor((Number(props.value) - 10) / 2)\n    if (modifierNum > 0) {\n      modifier = '+' + modifierNum\n    } else {\n      modifier = modifierNum.toString()\n    }\n  }\n\n  return (\n    <div className={classes}>\n      <div className='espergen-statbox-value'>\n        <input\n          type='text'\n          value={props.value ? props.value : ''}\n          onChange={(e) => props.onChange(props.name, e.target.value)}\n        />\n      </div>\n      <div>\n        <label className='abbrev'>{props.abbreviation}</label>\n        <hr />\n        <label>{props.label}</label>\n      </div>\n      <div className='espergen-statbox-modifier'>{modifier}</div>\n      <div className='espergen-statbox-value'>\n        <input\n          type='text'\n          value={props.valueSave ? props.valueSave : ''}\n          onChange={(e) => props.onChange(props.name + 'Save', e.target.value)}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default StatBox\n","import React from 'react'\nimport AttackTable from './Components/AttackTable'\nimport DeathSave from './Components/DeathSave'\nimport FeatureTable from './Components/FeatureTable'\nimport ResistancesTable from './Components/ResistancesTable'\nimport Skill from './Components/Skill'\nimport StatBox from './Components/StatBox'\n\n// eslint-disable-next-line no-unused-vars\nimport EsperGenCharacter from './EsperGenCharacter'\n\nimport './espergenstyles.css'\n\ninterface IEsperGenCharacterStatsSheetProps {\n  character?: EsperGenCharacter\n  defaultCharacter?: EsperGenCharacter\n  onCharacterChanged?: (\n    character: EsperGenCharacter,\n    changedField: string,\n    newValue: any\n  ) => void\n}\n\ninterface IEsperGenCharacterStatsSheetState {\n  character: EsperGenCharacter\n}\n\nconst initialState: IEsperGenCharacterStatsSheetState = {\n  character: {}\n}\n\nclass EsperGenCharacterStatsSheet extends React.Component<\n  IEsperGenCharacterStatsSheetProps,\n  IEsperGenCharacterStatsSheetState\n> {\n  constructor(props: IEsperGenCharacterStatsSheetProps) {\n    super(props)\n    if (props.defaultCharacter) {\n      initialState.character = props.defaultCharacter\n    }\n    this.state = initialState\n  }\n\n  updateCharacter(name: string, value: any) {\n    const oldCharacter = this.getCharacter()\n    const newCharacter: EsperGenCharacter = {}\n    Object.assign(newCharacter, oldCharacter)\n    newCharacter[name] = value\n\n    if (!this.props.character) {\n      // NOT CONTROLLED\n      this.setState({ character: newCharacter })\n    }\n\n    if (typeof this.props.onCharacterChanged === 'function') {\n      this.props.onCharacterChanged(newCharacter, name, value)\n    }\n  }\n\n  getCharacter() {\n    // NOT CONTROLLED\n    let character = this.state.character\n    if (this.props.character) {\n      // CONTROLLED\n      character = this.props.character\n    }\n    return character\n  }\n\n  render() {\n    const character = this.getCharacter()\n\n    return (\n      <div className='espergen-character-sheet container-xl mt-5 mb-5'>\n        <div>\n          <div className='row mb-4'>\n            <div className='col-md-5 order-md-2'>\n              <div className='espergen-page-title text-md-right'>\n                Esper Genesis\n              </div>\n              <div className='espergen-page-subtitle text-md-right'>\n                Heroic Sci-Fi Roleplaying\n              </div>\n\n              <div className='row mt-2'>\n                <div className='col-md-6'>\n                  <label style={{ width: '100px' }}>Experience Points: </label>\n                  <input\n                    type='text'\n                    style={{ width: 'calc(100% - 100px)' }}\n                    className='espergen-linput'\n                    value={character.xp ? character.xp : ''}\n                    onChange={(e) => this.updateCharacter('xp', e.target.value)}\n                  />\n                </div>\n                <div className='col-md-6'>\n                  <label style={{ width: '70px' }}>Next Level: </label>\n                  <input\n                    type='text'\n                    style={{ width: 'calc(100% - 70px)' }}\n                    className='espergen-linput'\n                    value={character.nextXp ? character.nextXp : ''}\n                    onChange={(e) =>\n                      this.updateCharacter('nextXp', e.target.value)\n                    }\n                  />\n                </div>\n              </div>\n\n              <div className='row'>\n                <div className='col-md-12'>\n                  <label style={{ width: '60px' }}>Campaign: </label>\n                  <input\n                    type='text'\n                    style={{ width: 'calc(100% - 60px)' }}\n                    className='espergen-linput'\n                    value={character.campaign ? character.campaign : ''}\n                    onChange={(e) => this.updateCharacter('campaign', e.target.value)}\n                  />\n                </div>\n              </div>\n\n              <div className='row'>\n                <div className='col-md-12'>\n                  <label style={{ width: '170px' }}>\n                    Crucible Corps Serial Number:{' '}\n                  </label>\n                  <input\n                    type='text'\n                    style={{ width: 'calc(100% - 170px)' }}\n                    className='espergen-linput'\n                    value={\n                      character.corpsSerialNumber\n                        ? character.corpsSerialNumber\n                        : ''\n                    }\n                    onChange={(e) =>\n                      this.updateCharacter('corpsSerialNumber', e.target.value)\n                    }\n                  />\n                </div>\n              </div>\n            </div>\n            <div className='col-md-7 order-md-1'>\n              <div className='row'>\n                <div className='col-md-3 text-center mt-3 mt-md-0'>\n                  <div className='espergen-circle'>\n                    <div className='espergen-circle-inner'>\n                      <input\n                        type='text'\n                        value={character.level ? character.level : ''}\n                        onChange={(e) =>\n                          this.updateCharacter('level', e.target.value)\n                        }\n                      />\n                    </div>\n                  </div>\n                  <div className='upper1' style={{ fontSize: '20px' }}>\n                    <span>L</span>evel\n                  </div>\n                </div>\n\n                <div className='col-md-9'>\n                  <div className='row mt-2'>\n                    <div className='col-md-7 pl-md-1 pr-md-1'>\n                      <label style={{ width: '40px' }}>Name: </label>\n                      <input\n                        type='text'\n                        style={{ width: 'calc(100% - 40px)' }}\n                        className='espergen-linput'\n                        value={character.name ? character.name : ''}\n                        onChange={(e) =>\n                          this.updateCharacter('name', e.target.value)\n                        }\n                      />\n                    </div>\n                    <div className='col-md-5 pl-md-1 pr-md-1'>\n                      <label style={{ width: '45px' }}>Player: </label>\n                      <input\n                        type='text'\n                        style={{ width: 'calc(100% - 45px)' }}\n                        className='espergen-linput'\n                        value={character.playerName ? character.playerName : ''}\n                        onChange={(e) =>\n                          this.updateCharacter('playerName', e.target.value)\n                        }\n                      />\n                    </div>\n                  </div>\n\n                  <div className='row'>\n                    <div className='col-md-12 pl-md-1 pr-md-1'>\n                      <label style={{ width: '40px' }}>Class: </label>\n                      <input\n                        type='text'\n                        style={{ width: 'calc(100% - 40px)' }}\n                        className='espergen-linput'\n                        value={character.class ? character.class : ''}\n                        onChange={(e) =>\n                          this.updateCharacter('class', e.target.value)\n                        }\n                      />\n                    </div>\n                  </div>\n\n                  <div className='row'>\n                    <div className='col-md-6 pl-md-1 pr-md-1'>\n                      <label style={{ width: '40px' }}>Race: </label>\n                      <input\n                        type='text'\n                        style={{ width: 'calc(100% - 40px)' }}\n                        className='espergen-linput'\n                        value={character.race ? character.race : ''}\n                        onChange={(e) =>\n                          this.updateCharacter('race', e.target.value)\n                        }\n                      />\n                    </div>\n                    <div className='col-md-6 pl-md-1 pr-md-1'>\n                      <label style={{ width: '70px' }}>Background: </label>\n                      <input\n                        type='text'\n                        style={{ width: 'calc(100% - 70px)' }}\n                        className='espergen-linput'\n                        value={character.background ? character.background : ''}\n                        onChange={(e) =>\n                          this.updateCharacter('background', e.target.value)\n                        }\n                      />\n                    </div>\n                  </div>\n\n                  <div className='row'>\n                    <div className='col-md-3 pl-md-1 pr-md-1'>\n                      <label style={{ width: '45px' }}>Gender: </label>\n                      <input\n                        type='text'\n                        style={{ width: 'calc(100% - 45px)' }}\n                        className='espergen-linput'\n                        value={character.gender ? character.gender : ''}\n                        onChange={(e) =>\n                          this.updateCharacter('gender', e.target.value)\n                        }\n                      />\n                    </div>\n                    <div className='col-md-3 pl-md-1 pr-md-1'>\n                      <label style={{ width: '30px' }}>Size: </label>\n                      <input\n                        type='text'\n                        style={{ width: 'calc(100% - 30px)' }}\n                        className='espergen-linput'\n                        value={character.size ? character.size : ''}\n                        onChange={(e) =>\n                          this.updateCharacter('size', e.target.value)\n                        }\n                      />\n                    </div>\n                    <div className='col-md-3 pl-md-1 pr-md-1'>\n                      <label style={{ width: '45px' }}>Height: </label>\n                      <input\n                        type='text'\n                        style={{ width: 'calc(100% - 45px)' }}\n                        className='espergen-linput'\n                        value={character.height ? character.height : ''}\n                        onChange={(e) =>\n                          this.updateCharacter('height', e.target.value)\n                        }\n                      />\n                    </div>\n                    <div className='col-md-3 pl-md-1 pr-md-1'>\n                      <label style={{ width: '45px' }}>Weight: </label>\n                      <input\n                        type='text'\n                        style={{ width: 'calc(100% - 45px)' }}\n                        className='espergen-linput'\n                        value={character.weight ? character.weight : ''}\n                        onChange={(e) =>\n                          this.updateCharacter('weight', e.target.value)\n                        }\n                      />\n                    </div>\n                  </div>\n\n                  <div className='row'>\n                    <div className='col-md-2 pl-md-1 pr-md-1'>\n                      <label style={{ width: '30px' }}>Age: </label>\n                      <input\n                        type='text'\n                        style={{ width: 'calc(100% - 30px)' }}\n                        className='espergen-linput'\n                        value={character.age ? character.age : ''}\n                        onChange={(e) =>\n                          this.updateCharacter('age', e.target.value)\n                        }\n                      />\n                    </div>\n                    <div className='col-md-3 pl-md-1 pr-md-1'>\n                      <label style={{ width: '30px' }}>Hair: </label>\n                      <input\n                        type='text'\n                        style={{ width: 'calc(100% - 30px)' }}\n                        className='espergen-linput'\n                        value={character.hair ? character.hair : ''}\n                        onChange={(e) =>\n                          this.updateCharacter('hair', e.target.value)\n                        }\n                      />\n                    </div>\n                    <div className='col-md-3 pl-md-1 pr-md-1'>\n                      <label style={{ width: '35px' }}>Eyes: </label>\n                      <input\n                        type='text'\n                        style={{ width: 'calc(100% - 35px)' }}\n                        className='espergen-linput'\n                        value={character.eyes ? character.eyes : ''}\n                        onChange={(e) =>\n                          this.updateCharacter('eyes', e.target.value)\n                        }\n                      />\n                    </div>\n                    <div className='col-md-4 pl-md-1 pr-md-1'>\n                      <label style={{ width: '60px' }}>Alignment: </label>\n                      <input\n                        type='text'\n                        style={{ width: 'calc(100% - 60px)' }}\n                        className='espergen-linput'\n                        value={character.alignment ? character.alignment : ''}\n                        onChange={(e) =>\n                          this.updateCharacter('alignment', e.target.value)\n                        }\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className='row'>\n            <div className='col-md-4'>\n              <div className='upper1' style={{ fontSize: '20px' }}>\n                <span>A</span>bilities\n              </div>\n              <label style={{ margin: '0 85px 5px 8px' }}>Score</label>\n              <label style={{ margin: '0 20px 5px' }}>Modifier</label>\n              <label style={{ margin: '0 30px 5px' }}>\n                Saving\n                <br />\n                Throw\n              </label>\n              <StatBox\n                abbreviation='STR'\n                label='Strength'\n                name='str'\n                value={character.str}\n                valueSave={character.strSave}\n                onChange={(name: string, value: any) => {\n                  this.updateCharacter(name, value)\n                }}\n              />\n              <StatBox\n                abbreviation='DEX'\n                label='Dexterity'\n                name='dex'\n                value={character.dex}\n                valueSave={character.dexSave}\n                onChange={(name: string, value: any) => {\n                  this.updateCharacter(name, value)\n                }}\n              />\n              <StatBox\n                abbreviation='CON'\n                label='Constitution'\n                name='con'\n                value={character.con}\n                valueSave={character.conSave}\n                onChange={(name: string, value: any) => {\n                  this.updateCharacter(name, value)\n                }}\n              />\n              <StatBox\n                abbreviation='INT'\n                label='intelligence'\n                name='int'\n                value={character.int}\n                valueSave={character.intSave}\n                onChange={(name: string, value: any) => {\n                  this.updateCharacter(name, value)\n                }}\n              />\n              <StatBox\n                abbreviation='WIS'\n                label='Wisdom'\n                name='wis'\n                value={character.wis}\n                valueSave={character.wisSave}\n                onChange={(name: string, value: any) => {\n                  this.updateCharacter(name, value)\n                }}\n              />\n              <StatBox\n                abbreviation='CHA'\n                label='Charisma'\n                name='cha'\n                value={character.cha}\n                valueSave={character.chaSave}\n                onChange={(name: string, value: any) => {\n                  this.updateCharacter(name, value)\n                }}\n              />\n\n              <div className='upper1 mt-4' style={{ fontSize: '16px' }}>\n                <span>S</span>enses\n              </div>\n              <div>\n                <label\n                  className='upper1'\n                  style={{ fontSize: '16px', fontWeight: 'normal' }}\n                >\n                  <span>P</span>assive <span>P</span>erception\n                </label>\n                <input\n                  type='text'\n                  style={{\n                    width: '40px',\n                    height: '40px',\n                    border: '2px solid black',\n                    margin: '0 10px 0 20px',\n                    fontSize: '16px',\n                    textAlign: 'center'\n                  }}\n                  className='espergen-linput'\n                  value={\n                    character.passivePerception\n                      ? character.passivePerception\n                      : ''\n                  }\n                  onChange={(e) =>\n                    this.updateCharacter('passivePerception', e.target.value)\n                  }\n                />\n                <label\n                  style={{\n                    textAlign: 'center',\n                    verticalAlign: 'middle'\n                  }}\n                >\n                  = 10 +\n                  <br />\n                  Perception\n                  <br />\n                  Skill\n                </label>\n              </div>\n              <div>\n                <textarea\n                  className='espergen-linedtextarea'\n                  value={character.senses ? character.senses : ''}\n                  onChange={(e) =>\n                    this.updateCharacter('senses', e.target.value)\n                  }\n                  rows={2}\n                />\n              </div>\n            </div>\n\n            <div className='col-md-4 pr-md-1 pl-md-1'>\n              <div className='row mt-5'>\n                <div className='col-md-7 pr-md-1 pl-md-1 text-center'>\n                  <div>\n                    <div\n                      className='upper1'\n                      style={{ fontSize: '16px', textAlign: 'center' }}\n                    >\n                      <span>B</span>urst <span>F</span>ire\n                    </div>\n\n                    <div className='mt-2'>\n                      <label className='espergen-inline-label'>\n                        Burst\n                        <br />\n                        DC\n                      </label>\n                      <div className='espergen-round-input'>\n                        <input\n                          type='text'\n                          value={character.burstDc ? character.burstDc : ''}\n                          onChange={(e) =>\n                            this.updateCharacter('burstDc', e.target.value)\n                          }\n                        />\n                      </div>\n                      <label className='espergen-inline-label'>\n                        Burst Save\n                        <br />\n                        Bonus\n                      </label>\n                      <div className='espergen-round-input'>\n                        <input\n                          type='text'\n                          value={character.burstSave ? character.burstSave : ''}\n                          onChange={(e) =>\n                            this.updateCharacter('burstSave', e.target.value)\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <label className='text-center' style={{ fontSize: '9px' }}>\n                    (DC = 8 + Proficiency Score + Dex Bonus)\n                  </label>\n\n                  <div>\n                    <div\n                      className='upper1 mt-3'\n                      style={{ fontSize: '16px', textAlign: 'center' }}\n                    >\n                      <span>A</span>bility <span>S</span>ave <span>DC</span>\n                    </div>\n\n                    <div className='mt-2'>\n                      <div className='espergen-inline-label'>\n                        <label>8 + </label>\n                        <input\n                          type='text'\n                          style={{\n                            width: '24px',\n                            margin: '0 5px 0 5px',\n                            textAlign: 'center'\n                          }}\n                          className='espergen-linput'\n                          value={\n                            character.abilitySave1Mod\n                              ? character.abilitySave1Mod\n                              : ''\n                          }\n                          onChange={(e) =>\n                            this.updateCharacter(\n                              'abilitySave1Mod',\n                              e.target.value\n                            )\n                          }\n                        />\n                        <br />\n                        <label style={{ fontSize: '9px' }}>\n                          + Prof\n                          <br />\n                          Bonus\n                        </label>\n                      </div>\n\n                      <div\n                        className='espergen-round-input'\n                        style={{ marginBottom: '15px' }}\n                      >\n                        <input\n                          type='text'\n                          value={\n                            character.abilitySave1Dc\n                              ? character.abilitySave1Dc\n                              : ''\n                          }\n                          onChange={(e) =>\n                            this.updateCharacter(\n                              'abilitySave1Dc',\n                              e.target.value\n                            )\n                          }\n                        />\n                      </div>\n                      <div className='espergen-inline-label'>\n                        <label>8 + </label>\n                        <input\n                          type='text'\n                          style={{\n                            width: '24px',\n                            margin: '0 5px 0 5px',\n                            textAlign: 'center'\n                          }}\n                          className='espergen-linput'\n                          value={\n                            character.abilitySave2Mod\n                              ? character.abilitySave2Mod\n                              : ''\n                          }\n                          onChange={(e) =>\n                            this.updateCharacter(\n                              'abilitySave2Mod',\n                              e.target.value\n                            )\n                          }\n                        />\n                        <br />\n                        <label style={{ fontSize: '9px' }}>\n                          + Prof\n                          <br />\n                          Bonus\n                        </label>\n                      </div>\n\n                      <div\n                        className='espergen-round-input'\n                        style={{ marginBottom: '15px' }}\n                      >\n                        <input\n                          type='text'\n                          value={\n                            character.abilitySave2Dc\n                              ? character.abilitySave2Dc\n                              : ''\n                          }\n                          onChange={(e) =>\n                            this.updateCharacter(\n                              'abilitySave2Dc',\n                              e.target.value\n                            )\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className='col-md-5'>\n                  <div className='espergen-circle solid'>\n                    <div className='espergen-circle-inner'>\n                      <input\n                        type='text'\n                        style={{ padding: '13px' }}\n                        value={\n                          character.proficiencyBonus\n                            ? character.proficiencyBonus\n                            : ''\n                        }\n                        onChange={(e) =>\n                          this.updateCharacter(\n                            'proficiencyBonus',\n                            e.target.value\n                          )\n                        }\n                      />\n                    </div>\n                  </div>\n                  <div\n                    className='upper1'\n                    style={{\n                      fontSize: '16px',\n                      textAlign: 'center',\n                      lineHeight: '24px',\n                      marginTop: '10px'\n                    }}\n                  >\n                    <span>P</span>roficiency\n                    <br />\n                    <span>B</span>onus\n                  </div>\n\n                  <hr className='espergen-seperator' />\n                  <div>\n                    <input\n                      type='text'\n                      style={{\n                        width: '24px',\n                        height: '24px',\n                        border: '1px solid black',\n                        margin: '0 10px 0 10px',\n                        fontSize: '12px',\n                        textAlign: 'center'\n                      }}\n                      className='espergen-linput'\n                      value={character.inspiration ? character.inspiration : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('inspiration', e.target.value)\n                      }\n                    />\n                    <label\n                      className='upper1'\n                      style={{\n                        fontSize: '12px',\n                        fontWeight: 'normal',\n                        margin: '0',\n                        verticalAlign: 'bottom'\n                      }}\n                    >\n                      <span>I</span>inspiration\n                    </label>\n                  </div>\n                  <hr className='espergen-seperator' />\n                </div>\n              </div>\n\n              <label className='text-center w-100 mt-2 mb-0'>\n                <strong>Saving Throw Advantages/Disadvantages</strong>\n              </label>\n              <textarea\n                className='espergen-linedtextarea'\n                value={\n                  character.savingThrowAdvs ? character.savingThrowAdvs : ''\n                }\n                onChange={(e) =>\n                  this.updateCharacter('savingThrowAdvs', e.target.value)\n                }\n                rows={2}\n              />\n\n              <div className='upper1 mt-2 mb-1' style={{ fontSize: '16px' }}>\n                <span>S</span>pecial <span>F</span>eatures\n              </div>\n              <FeatureTable\n                rows={6}\n                name='specialFeatures'\n                value={character.specialFeatures}\n                onChange={(name: string, value: any) => {\n                  this.updateCharacter(name, value)\n                }}\n              />\n            </div>\n\n            <div className='col-md-4'>\n              <div className='upper1 mb-2' style={{ fontSize: '20px' }}>\n                <span>S</span>kills\n              </div>\n              <label style={{ margin: '0 0px 5px 8px' }}>Bonus</label>\n              <label style={{ margin: '0 0px 5px 18px' }}>Skill Name</label>\n              <label style={{ margin: '0 5px 5px 0px', float: 'right' }}>\n                Proficient\n              </label>\n              <div className='espergen-skilllist'>\n                <Skill\n                  label='Acrobatics'\n                  hint='(Dex)'\n                  name='skillAcrobatics'\n                  value={character.skillAcrobatics}\n                  checked={character.skillAcrobaticsChecked}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <Skill\n                  label='Astrophysics'\n                  hint='(Int)'\n                  name='skillAstrophysics'\n                  value={character.skillAstrophysics}\n                  checked={character.skillAstrophysicsChecked}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <Skill\n                  label='Athletics'\n                  hint='(Str)'\n                  name='skillAthletics'\n                  value={character.skillAthletics}\n                  checked={character.skillAthleticsChecked}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <Skill\n                  label='Computers'\n                  hint='(Int)'\n                  name='skillComputers'\n                  value={character.skillComputers}\n                  checked={character.skillComputersChecked}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <Skill\n                  label='Deception'\n                  hint='(Cha)'\n                  name='skillDeception'\n                  value={character.skillDeception}\n                  checked={character.skillDeceptionChecked}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <Skill\n                  label='Insight'\n                  hint='(Wis)'\n                  name='skillInsight'\n                  value={character.skillInsight}\n                  checked={character.skillInsightChecked}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <Skill\n                  label='Intimidation'\n                  hint='(Cha)'\n                  name='skillIntimidation'\n                  value={character.skillIntimidation}\n                  checked={character.skillIntimidationChecked}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <Skill\n                  label='Investigation'\n                  hint='(Int)'\n                  name='skillInvestigation'\n                  value={character.skillInvestigation}\n                  checked={character.skillInvestigationChecked}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <Skill\n                  label='Lore'\n                  hint='(Int)'\n                  name='skillLore'\n                  value={character.skillLore}\n                  checked={character.skillLoreChecked}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <Skill\n                  label='Mechanics'\n                  hint='(Wis)'\n                  name='skillMechanics'\n                  value={character.skillMechanics}\n                  checked={character.skillMechanicsChecked}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <Skill\n                  label='Medicine'\n                  hint='(Wis)'\n                  name='skillMedicine'\n                  value={character.skillMedicine}\n                  checked={character.skillMedicineChecked}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <Skill\n                  label='Perception'\n                  hint='(Wis)'\n                  name='skillPerception'\n                  value={character.skillPerception}\n                  checked={character.skillPerceptionChecked}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <Skill\n                  label='Performance'\n                  hint='(Cha)'\n                  name='skillPerformance'\n                  value={character.skillPerformance}\n                  checked={character.skillPerformanceChecked}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <Skill\n                  label='Persuasion'\n                  hint='(Cha)'\n                  name='skillPersuasion'\n                  value={character.skillPersuasion}\n                  checked={character.skillPersuasionChecked}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <Skill\n                  label='Slight of Hand'\n                  hint='(Dex)'\n                  name='skillSlightOfHand'\n                  value={character.skillSlightOfHand}\n                  checked={character.skillSlightOfHandChecked}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <Skill\n                  label='Stealth'\n                  hint='(Dex)'\n                  name='skillStealth'\n                  value={character.skillStealth}\n                  checked={character.skillStealthChecked}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <Skill\n                  label='Survival'\n                  hint='(Wis)'\n                  name='skillSurvival'\n                  value={character.skillSurvival}\n                  checked={character.skillSurvivalChecked}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <Skill\n                  label='Xenobiology'\n                  hint='(Int)'\n                  name='skillXenobiology'\n                  value={character.skillXenobiology}\n                  checked={character.skillXenobiologyChecked}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n\n          <hr className='espergen-page-break mt-2' />\n          <hr className='espergen-page-break mb-2' />\n\n          <div className='row'>\n            <div className='col-md-6'>\n              <div className='mb-2'>\n                <div\n                  className='upper1'\n                  style={{\n                    fontSize: '20px',\n                    display: 'inline-block',\n                    verticalAlign: 'middle',\n                    marginBottom: '5px'\n                  }}\n                >\n                  <span>C</span>ombat\n                </div>\n                <div className='espergen-round-input large ml-4 mr-2'>\n                  <input\n                    type='text'\n                    value={character.init ? character.init : ''}\n                    onChange={(e) =>\n                      this.updateCharacter('init', e.target.value)\n                    }\n                  />\n                </div>\n                <div\n                  className='upper1 mr-2'\n                  style={{\n                    fontSize: '16px',\n                    fontWeight: 'normal',\n                    display: 'inline-block',\n                    verticalAlign: 'middle'\n                  }}\n                >\n                  <span>I</span>nitiative\n                </div>\n                <div className='ml-3 mr-0' style={{ display: 'inline-block' }}>\n                  <label\n                    className='mb-0 text-center w-100'\n                    style={{ fontSize: '8px' }}\n                  >\n                    Dex\n                  </label>\n                  <br />\n                  <input\n                    type='text'\n                    className='espergen-binput'\n                    value={character.initDex ? character.initDex : ''}\n                    onChange={(e) =>\n                      this.updateCharacter('initDex', e.target.value)\n                    }\n                  />\n                </div>\n                +\n                <div className='ml-0 mr-2' style={{ display: 'inline-block' }}>\n                  <label\n                    className='mb-0 text-center w-100'\n                    style={{ fontSize: '8px' }}\n                  >\n                    Misc\n                  </label>\n                  <br />\n                  <input\n                    type='text'\n                    className='espergen-binput'\n                    value={character.initMisc ? character.initMisc : ''}\n                    onChange={(e) =>\n                      this.updateCharacter('initMisc', e.target.value)\n                    }\n                  />\n                </div>\n                <div\n                  style={{\n                    display: 'inline-block',\n                    width: '1px',\n                    verticalAlign: 'middle',\n                    height: '40px',\n                    backgroundColor: 'black'\n                  }}\n                />\n                <div className='ml-2 mr-2' style={{ display: 'inline-block' }}>\n                  <label\n                    className='mb-0 text-center w-100'\n                    style={{ fontSize: '8px' }}\n                  >\n                    Base Speed\n                  </label>\n                  <br />\n                  <input\n                    type='text'\n                    style={{ height: '36px', width: '50px' }}\n                    className='espergen-binput'\n                    value={character.speed ? character.speed : ''}\n                    onChange={(e) =>\n                      this.updateCharacter('speed', e.target.value)\n                    }\n                  />\n                </div>\n                <div className='ml-2' style={{ display: 'inline-block' }}>\n                  <label\n                    className='mb-0 text-center w-100'\n                    style={{ fontSize: '8px' }}\n                  >\n                    Encumbered\n                  </label>\n                  <br />\n                  <input\n                    type='text'\n                    style={{ height: '36px', width: '50px' }}\n                    className='espergen-binput'\n                    value={character.encumbered ? character.encumbered : ''}\n                    onChange={(e) =>\n                      this.updateCharacter('encumbered', e.target.value)\n                    }\n                  />\n                </div>\n              </div>\n\n              <div className='row'>\n                <div className='col-md-4 pd-md-0'>\n                  <div\n                    className='upper1 mb-3'\n                    style={{\n                      fontSize: '16px',\n                      display: 'inline-block',\n                      verticalAlign: 'middle'\n                    }}\n                  >\n                    <span>A</span>rmour <span>C</span>lass\n                  </div>\n\n                  <div className='espergen-hex'>\n                    <div className='espergen-circle-inner'>\n                      <input\n                        type='text'\n                        value={character.ac ? character.ac : ''}\n                        onChange={(e) =>\n                          this.updateCharacter('ac', e.target.value)\n                        }\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className='col-md-8 pl-md-0 mt-5 mt-md-0'>\n                  <div className='mt-2'>\n                    <input\n                      type='text'\n                      className='espergen-binput'\n                      value={character.acBonus ? character.acBonus : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('acBonus', e.target.value)\n                      }\n                    />\n                    <label\n                      className='mb-0 text-center'\n                      style={{\n                        width: '60px',\n                        fontSize: '8px',\n                        verticalAlign: 'middle'\n                      }}\n                    >\n                      Armour\n                      <br />\n                      Bonus\n                    </label>\n                    <input\n                      type='text'\n                      style={{ width: 'calc(100% - 84px' }}\n                      className='espergen-binput'\n                      value={character.acBonusText ? character.acBonusText : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('acBonusText', e.target.value)\n                      }\n                    />\n                  </div>\n                  <span className='ml-2' style={{}}>\n                    +\n                  </span>\n                  <div>\n                    <input\n                      type='text'\n                      className='espergen-binput'\n                      value={\n                        character.acShieldBonus ? character.acShieldBonus : ''\n                      }\n                      onChange={(e) =>\n                        this.updateCharacter('acShieldBonus', e.target.value)\n                      }\n                    />\n                    <label\n                      className='mb-0 text-center'\n                      style={{\n                        width: '60px',\n                        fontSize: '8px',\n                        verticalAlign: 'middle'\n                      }}\n                    >\n                      Shield\n                      <br />\n                      Bonus\n                    </label>\n                    <input\n                      type='text'\n                      style={{ width: 'calc(100% - 84px' }}\n                      className='espergen-binput'\n                      value={\n                        character.acShieldBonusText\n                          ? character.acShieldBonusText\n                          : ''\n                      }\n                      onChange={(e) =>\n                        this.updateCharacter(\n                          'acShieldBonusText',\n                          e.target.value\n                        )\n                      }\n                    />\n                  </div>\n                  <span className='ml-2' style={{}}>\n                    +\n                  </span>\n                  <div>\n                    <input\n                      type='text'\n                      className='espergen-binput'\n                      value={character.acDexMod ? character.acDexMod : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('acDexMod', e.target.value)\n                      }\n                    />\n                    <label\n                      className='mb-0 text-center'\n                      style={{\n                        width: '60px',\n                        fontSize: '8px',\n                        verticalAlign: 'middle'\n                      }}\n                    >\n                      Dexterity\n                      <br />\n                      Modifier\n                    </label>\n\n                    <div\n                      style={{\n                        display: 'inline-block',\n                        verticalAlign: 'middle',\n                        lineHeight: '12px'\n                      }}\n                    >\n                      <input\n                        type='text'\n                        className='espergen-binput'\n                        style={{\n                          height: '12px',\n                          width: '12px',\n                          fontSize: '7px'\n                        }}\n                        value={\n                          character.acMediumArmour\n                            ? character.acMediumArmour\n                            : ''\n                        }\n                        onChange={(e) =>\n                          this.updateCharacter('acMediumArmour', e.target.value)\n                        }\n                      />\n                      <label\n                        className='mb-0 ml-1 mr-3'\n                        style={{\n                          fontSize: '8px',\n                          verticalAlign: 'middle'\n                        }}\n                      >\n                        Medium Armour (Max Bonus + 2)\n                      </label>\n\n                      <br />\n\n                      <input\n                        type='text'\n                        className='espergen-binput'\n                        style={{\n                          height: '12px',\n                          width: '12px',\n                          fontSize: '7px'\n                        }}\n                        value={\n                          character.acHeavyArmour ? character.acHeavyArmour : ''\n                        }\n                        onChange={(e) =>\n                          this.updateCharacter('acHeavyArmour', e.target.value)\n                        }\n                      />\n                      <label\n                        className='mb-0 ml-1 mr-3'\n                        style={{\n                          fontSize: '8px',\n                          verticalAlign: 'middle'\n                        }}\n                      >\n                        Heavy Armour (No Dex Bonus)\n                      </label>\n                    </div>\n                    <input\n                      type='text'\n                      className='espergen-binput'\n                      style={{\n                        height: '12px',\n                        width: '12px',\n                        fontSize: '8px'\n                      }}\n                      value={\n                        character.acStealthDisAdv\n                          ? character.acStealthDisAdv\n                          : ''\n                      }\n                      onChange={(e) =>\n                        this.updateCharacter('acStealthDisAdv', e.target.value)\n                      }\n                    />\n                    <label\n                      className='mb-0 ml-1 mr-2'\n                      style={{\n                        fontSize: '7px',\n                        verticalAlign: 'middle'\n                      }}\n                    >\n                      Stealth\n                      <br />\n                      Disadv\n                    </label>\n                  </div>\n                  <span className='ml-2' style={{}}>\n                    +\n                  </span>\n                  <div>\n                    <input\n                      type='text'\n                      className='espergen-binput'\n                      value={\n                        character.acPowerModifier\n                          ? character.acPowerModifier\n                          : ''\n                      }\n                      onChange={(e) =>\n                        this.updateCharacter('acPowerModifier', e.target.value)\n                      }\n                    />\n                    <label\n                      className='mb-0 text-center'\n                      style={{\n                        width: '60px',\n                        fontSize: '8px',\n                        verticalAlign: 'middle'\n                      }}\n                    >\n                      Power\n                      <br />\n                      Modifier\n                    </label>\n                    <input\n                      type='text'\n                      style={{ width: 'calc(100% - 84px' }}\n                      className='espergen-binput'\n                      value={\n                        character.acPowerModifierText\n                          ? character.acPowerModifierText\n                          : ''\n                      }\n                      onChange={(e) =>\n                        this.updateCharacter(\n                          'acPowerModifierText',\n                          e.target.value\n                        )\n                      }\n                    />\n                  </div>\n                  <span className='ml-2' style={{}}>\n                    +\n                  </span>\n                  <div>\n                    <input\n                      type='text'\n                      className='espergen-binput'\n                      value={\n                        character.acItemModifier ? character.acItemModifier : ''\n                      }\n                      onChange={(e) =>\n                        this.updateCharacter('acItemModifier', e.target.value)\n                      }\n                    />\n                    <label\n                      className='mb-0 text-center'\n                      style={{\n                        width: '60px',\n                        fontSize: '8px',\n                        verticalAlign: 'middle'\n                      }}\n                    >\n                      Item\n                      <br />\n                      Modifier\n                    </label>\n                    <input\n                      type='text'\n                      style={{ width: 'calc(100% - 84px' }}\n                      className='espergen-binput'\n                      value={\n                        character.acItemModifierText\n                          ? character.acItemModifierText\n                          : ''\n                      }\n                      onChange={(e) =>\n                        this.updateCharacter(\n                          'acItemModifierText',\n                          e.target.value\n                        )\n                      }\n                    />\n                  </div>\n                  <span className='ml-2' style={{}}>\n                    +\n                  </span>\n                  <div>\n                    <input\n                      type='text'\n                      className='espergen-binput'\n                      value={character.acMiscBonus ? character.acMiscBonus : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('acMiscBonus', e.target.value)\n                      }\n                    />\n                    <label\n                      className='mb-0 text-center'\n                      style={{\n                        width: '60px',\n                        fontSize: '8px',\n                        verticalAlign: 'middle'\n                      }}\n                    >\n                      Misc/Mod\n                      <br />\n                      Bonus\n                    </label>\n                    <input\n                      type='text'\n                      style={{ width: 'calc(100% - 84px' }}\n                      className='espergen-binput'\n                      value={\n                        character.acMiscBonusText\n                          ? character.acMiscBonusText\n                          : ''\n                      }\n                      onChange={(e) =>\n                        this.updateCharacter('acMiscBonusText', e.target.value)\n                      }\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className='mt-3'>\n                <div\n                  className='upper1 mb-2'\n                  style={{\n                    fontSize: '16px',\n                    display: 'inline-block',\n                    verticalAlign: 'middle'\n                  }}\n                >\n                  <span>A</span>ttacks\n                </div>\n\n                <div className='float-right'>\n                  <div\n                    className='upper1 mb-1'\n                    style={{\n                      fontWeight: 'normal',\n                      fontSize: '10px',\n                      display: 'inline-block',\n                      verticalAlign: 'middle'\n                    }}\n                  >\n                    # of <span>A</span>ttacks per <span>A</span>ction\n                  </div>\n                  <div className='espergen-round-input large ml-2 mr-2'>\n                    <input\n                      type='text'\n                      value={\n                        character.attacksPerAction\n                          ? character.attacksPerAction\n                          : ''\n                      }\n                      onChange={(e) =>\n                        this.updateCharacter('attacksPerAction', e.target.value)\n                      }\n                    />\n                  </div>\n                </div>\n              </div>\n              <AttackTable\n                rows={5}\n                name='attacks'\n                value={character.attacks}\n                onChange={(name: string, value: any) => {\n                  this.updateCharacter(name, value)\n                }}\n              />\n            </div>\n            <div className='col-md-6'>\n              <div className='row'>\n                <div className='col-md-5 pr-md-0'>\n                  <div\n                    className='upper1 mb-2'\n                    style={{\n                      fontSize: '16px',\n                      display: 'inline-block',\n                      verticalAlign: 'middle'\n                    }}\n                  >\n                    <span>H</span>it <span>P</span>oints\n                  </div>\n                  <div\n                    className='espergen-circle'\n                    style={{\n                      width: '150px',\n                      borderColor: '#d4af37',\n                      borderStyle: 'double'\n                    }}\n                  >\n                    <div className='espergen-circle-inner'>\n                      <input\n                        type='text'\n                        value={character.maxHp ? character.maxHp : ''}\n                        onChange={(e) =>\n                          this.updateCharacter('maxHp', e.target.value)\n                        }\n                      />\n                    </div>\n                  </div>\n                  <label\n                    className='text-center w-100 mb-0'\n                    style={{ fontSize: '16px' }}\n                  >\n                    <b>Max HP</b>\n                  </label>\n                </div>\n                <div className='col-md-7 pl-md-0'>\n                  <div className='espergen-box mt-3'>\n                    <div\n                      style={{\n                        display: 'inline-block',\n                        verticalAlign: 'top'\n                      }}\n                    >\n                      <input\n                        type='text'\n                        style={{ height: '36px', width: '70px' }}\n                        className='espergen-binput'\n                        value={character.tempHp ? character.tempHp : ''}\n                        onChange={(e) =>\n                          this.updateCharacter('tempHp', e.target.value)\n                        }\n                      />\n                      <br />\n                      <label className='text-center' style={{ width: '70px' }}>\n                        Temporary\n                        <br />\n                        HP\n                      </label>\n                    </div>\n                    <div\n                      style={{\n                        display: 'inline-block',\n                        width: 'calc(100% - 70px)',\n                        padding: '0 10px'\n                      }}\n                    >\n                      <label className='w-100 text-right mb-0'>Wounds</label>\n                      <textarea\n                        value={character.wounds ? character.wounds : ''}\n                        onChange={(e) =>\n                          this.updateCharacter('wounds', e.target.value)\n                        }\n                        rows={7}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className='row'>\n                <div className='col-md-4 pd-md-1 text-center'>\n                  <div\n                    className='upper1 mt-4'\n                    style={{\n                      fontWeight: 'normal',\n                      fontSize: '8px'\n                    }}\n                  >\n                    <span>R</span>esistances <span>(H</span>alf <span>D</span>\n                    amage<span>)</span>\n                  </div>\n                  <hr\n                    className='espergen-seperator'\n                    style={{ height: '0px', marginTop: '0px' }}\n                  />\n                  <ResistancesTable\n                    rows={3}\n                    name='resistances'\n                    value={character.resistances}\n                    onChange={(name: string, value: any) => {\n                      this.updateCharacter(name, value)\n                    }}\n                  />\n                </div>\n                <div className='col-md-4 pd-md-1 pl-md-1 text-center'>\n                  <div\n                    className='upper1 mt-1'\n                    style={{\n                      fontSize: '11px'\n                    }}\n                  >\n                    <span>H</span>it <span>D</span>ice\n                  </div>\n                  <hr\n                    className='espergen-seperator'\n                    style={{ height: '0px', margin: '0px' }}\n                  />\n                  <div>\n                    <label\n                      className='mb-0'\n                      style={{ fontSize: '8px', marginRight: '13px' }}\n                    >\n                      Level\n                    </label>\n                    <label\n                      className='mb-0'\n                      style={{ fontSize: '8px', marginRight: '12px' }}\n                    >\n                      Die Type\n                    </label>\n                    <label\n                      className='mb-0'\n                      style={{ fontSize: '8px', marginRight: '17px' }}\n                    >\n                      Con\n                    </label>\n                    <label className='mb-0' style={{ fontSize: '8px' }}>\n                      # Used\n                    </label>\n                  </div>\n                  <div className='espergen-box gray' style={{ padding: '2px' }}>\n                    <div className='mb-1'>\n                      <input\n                        type='text'\n                        className='espergen-binput mr-1'\n                        value={\n                          character.hitDice1Lvl ? character.hitDice1Lvl : ''\n                        }\n                        onChange={(e) =>\n                          this.updateCharacter('hitDice1Lvl', e.target.value)\n                        }\n                      />\n                      x\n                      <input\n                        type='text'\n                        className='espergen-binput mx-1'\n                        value={\n                          character.hitDice1Type ? character.hitDice1Type : ''\n                        }\n                        onChange={(e) =>\n                          this.updateCharacter('hitDice1Type', e.target.value)\n                        }\n                      />\n                      +\n                      <input\n                        type='text'\n                        className='espergen-binput ml-1 mr-2'\n                        value={\n                          character.hitDice1Con ? character.hitDice1Con : ''\n                        }\n                        onChange={(e) =>\n                          this.updateCharacter('hitDice1Con', e.target.value)\n                        }\n                      />\n                      <input\n                        type='text'\n                        className='espergen-binput ml-2'\n                        value={\n                          character.hitDice1Used ? character.hitDice1Used : ''\n                        }\n                        onChange={(e) =>\n                          this.updateCharacter('hitDice1Used', e.target.value)\n                        }\n                      />\n                    </div>\n\n                    <div className='mb-1'>\n                      <input\n                        type='text'\n                        className='espergen-binput mr-1'\n                        value={\n                          character.hitDice2Lvl ? character.hitDice2Lvl : ''\n                        }\n                        onChange={(e) =>\n                          this.updateCharacter('hitDice2Lvl', e.target.value)\n                        }\n                      />\n                      x\n                      <input\n                        type='text'\n                        className='espergen-binput mx-1'\n                        value={\n                          character.hitDice2Type ? character.hitDice2Type : ''\n                        }\n                        onChange={(e) =>\n                          this.updateCharacter('hitDice2Type', e.target.value)\n                        }\n                      />\n                      +\n                      <input\n                        type='text'\n                        className='espergen-binput ml-1 mr-2'\n                        value={\n                          character.hitDice2Con ? character.hitDice2Con : ''\n                        }\n                        onChange={(e) =>\n                          this.updateCharacter('hitDice2Con', e.target.value)\n                        }\n                      />\n                      <input\n                        type='text'\n                        className='espergen-binput ml-2'\n                        value={\n                          character.hitDice2Used ? character.hitDice2Used : ''\n                        }\n                        onChange={(e) =>\n                          this.updateCharacter('hitDice2Used', e.target.value)\n                        }\n                      />\n                    </div>\n\n                    <div>\n                      <input\n                        type='text'\n                        className='espergen-binput mr-1'\n                        value={\n                          character.hitDice3Lvl ? character.hitDice3Lvl : ''\n                        }\n                        onChange={(e) =>\n                          this.updateCharacter('hitDice3Lvl', e.target.value)\n                        }\n                      />\n                      x\n                      <input\n                        type='text'\n                        className='espergen-binput mx-1'\n                        value={\n                          character.hitDice3Type ? character.hitDice3Type : ''\n                        }\n                        onChange={(e) =>\n                          this.updateCharacter('hitDice3Type', e.target.value)\n                        }\n                      />\n                      +\n                      <input\n                        type='text'\n                        className='espergen-binput ml-1 mr-2'\n                        value={\n                          character.hitDice3Con ? character.hitDice3Con : ''\n                        }\n                        onChange={(e) =>\n                          this.updateCharacter('hitDice3Con', e.target.value)\n                        }\n                      />\n                      <input\n                        type='text'\n                        className='espergen-binput ml-2'\n                        value={\n                          character.hitDice3Used ? character.hitDice3Used : ''\n                        }\n                        onChange={(e) =>\n                          this.updateCharacter('hitDice3Used', e.target.value)\n                        }\n                      />\n                    </div>\n                  </div>\n                  <label\n                    className='w-100 text-center mb-1'\n                    style={{ fontSize: '8px' }}\n                  >\n                    1/2 max HD after Long Rest\n                  </label>\n                </div>\n                <div className='col-md-4 pl-md-4'>\n                  <DeathSave\n                    classes='d-and-d-save-success'\n                    label=''\n                    name='deathsave'\n                    valueSuccess={character.deathsaveSuccesses}\n                    valueFailure={character.deathsaveFailures}\n                    onChange={(name: string, value: any) => {\n                      this.updateCharacter(name, value)\n                    }}\n                  />\n                  <div className='mt-4'>\n                    <label className='text-center' style={{ width: '75px' }}>\n                      Death Saves\n                      <br />\n                      (DC 10)\n                    </label>\n                  </div>\n                </div>\n              </div>\n\n              <div className='mt-0' style={{ paddingTop: '3px' }}>\n                <div\n                  className='upper1 mb-2'\n                  style={{\n                    fontSize: '16px',\n                    display: 'inline-block',\n                    verticalAlign: 'middle'\n                  }}\n                >\n                  <span>A</span>ctions\n                </div>\n\n                <div className='float-right mt-2 pt-1'>\n                  <label className='upper1' style={{ fontWeight: 'normal' }}>\n                    (1 Action, 1 Bonus Action, and 1 Reaction per Turn)\n                  </label>\n                </div>\n              </div>\n              <div className='row'>\n                <div className='col-md-6 pr-md-1'>\n                  <label className='mb-0'>Base Actions</label>\n                  <div\n                    className='espergen-box'\n                    style={{ paddingBottom: '6px' }}\n                  >\n                    <textarea\n                      value={character.actions ? character.actions : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('actions', e.target.value)\n                      }\n                      rows={12}\n                    />\n                  </div>\n                </div>\n                <div className='col-md-6 pl-md-1'>\n                  <label className='mb-0'>Bonus Actions</label>\n                  <div className='espergen-box'>\n                    <textarea\n                      value={\n                        character.bonusActions ? character.bonusActions : ''\n                      }\n                      onChange={(e) =>\n                        this.updateCharacter('bonusActions', e.target.value)\n                      }\n                      rows={5}\n                    />\n                  </div>\n\n                  <label className='mb-0'>Reactions</label>\n                  <div className='espergen-box'>\n                    <textarea\n                      value={character.reactions ? character.reactions : ''}\n                      onChange={(e) =>\n                        this.updateCharacter('reactions', e.target.value)\n                      }\n                      rows={5}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default EsperGenCharacterStatsSheet\n","import React from 'react'\n\nfunction GearTable(props: {\n  onChange: (arg0: any, arg1: any) => void\n  name: string\n  value?: any\n  classes?: string\n  rows: number\n}) {\n  function updateValue(index: React.Key, field: string, v: string) {\n    const value = getValue().slice()\n    value[index][field] = v\n    props.onChange(props.name, value)\n  }\n\n  function getValue() {\n    let value = props.value\n    if (!value) {\n      value = []\n    }\n    while (value.length < props.rows) {\n      value.push({})\n    }\n    return value\n  }\n\n  let classes = 'espergen-table'\n  if (props.classes) {\n    classes += ' ' + props.classes\n  }\n\n  return (\n    <table className={classes}>\n      <thead>\n        <tr>\n          <th>NAME</th>\n          <th style={{ width: '40px' }}>#</th>\n          <th style={{ width: '40px' }}>WT.</th>\n        </tr>\n      </thead>\n      <tbody>\n        {getValue().map(\n          (\n            v: {\n              name: string | number | readonly string[] | undefined\n              number: string | number | readonly string[] | undefined\n              weight: string | number | readonly string[] | undefined\n            },\n            index: string\n          ) => {\n            return (\n              <tr key={'espergen-table-row-' + props.name + index}>\n                <td>\n                  <input\n                    type='text'\n                    value={v.name ? v.name : ''}\n                    onChange={(e) => updateValue(index, 'name', e.target.value)}\n                  />\n                </td>\n                <td>\n                  <input\n                    type='text'\n                    value={v.number ? v.number : ''}\n                    onChange={(e) =>\n                      updateValue(index, 'number', e.target.value)\n                    }\n                  />\n                </td>\n                <td>\n                  <input\n                    type='text'\n                    value={v.weight ? v.weight : ''}\n                    onChange={(e) =>\n                      updateValue(index, 'weight', e.target.value)\n                    }\n                  />\n                </td>\n              </tr>\n            )\n          }\n        )}\n      </tbody>\n    </table>\n  )\n}\n\nexport default GearTable\n","import React from 'react'\n\nfunction VehiclesTable(props: {\n  onChange: (arg0: any, arg1: any) => void\n  name: string\n  value?: any\n  classes?: string\n  rows: number\n}) {\n  function updateValue(index: React.Key, field: string, v: string) {\n    const value = getValue().slice()\n    value[index][field] = v\n    props.onChange(props.name, value)\n  }\n\n  function getValue() {\n    let value = props.value\n    if (!value) {\n      value = []\n    }\n    while (value.length < props.rows) {\n      value.push({})\n    }\n    return value\n  }\n\n  let classes = 'espergen-table'\n  if (props.classes) {\n    classes += ' ' + props.classes\n  }\n\n  return (\n    <table className={classes}>\n      <thead>\n        <tr>\n          <th>\n            <div\n              className='upper1'\n              style={{\n                fontSize: '12px',\n                fontWeight: 'normal'\n              }}\n            >\n              <span>A</span>ssigned <span>V</span>ehicles\n            </div>\n          </th>\n          <th style={{ width: '90px' }}>\n            <div\n              className='upper1'\n              style={{\n                fontSize: '12px',\n                fontWeight: 'normal'\n              }}\n            >\n              <span>R</span>ole<span>/P</span>osition\n            </div>\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {getValue().map(\n          (\n            v: {\n              name: string | number | readonly string[] | undefined\n              role: string | number | readonly string[] | undefined\n            },\n            index: string\n          ) => {\n            return (\n              <tr key={'espergen-table-row-' + props.name + index}>\n                <td>\n                  <input\n                    type='text'\n                    value={v.name ? v.name : ''}\n                    onChange={(e) => updateValue(index, 'name', e.target.value)}\n                  />\n                </td>\n                <td>\n                  <input\n                    type='text'\n                    value={v.role ? v.role : ''}\n                    onChange={(e) => updateValue(index, 'role', e.target.value)}\n                  />\n                </td>\n              </tr>\n            )\n          }\n        )}\n      </tbody>\n    </table>\n  )\n}\n\nexport default VehiclesTable\n","import React from 'react'\nimport GearTable from './Components/GearTable'\nimport VehiclesTable from './Components/VehiclesTable'\n\n// eslint-disable-next-line no-unused-vars\nimport EsperGenCharacter from './EsperGenCharacter'\n\nimport './espergenstyles.css'\n\ninterface IEsperGenCharacterTraitsSheetProps {\n  character?: EsperGenCharacter\n  defaultCharacter?: EsperGenCharacter\n  onCharacterChanged?: (\n    character: EsperGenCharacter,\n    changedField: string,\n    newValue: any\n  ) => void\n}\n\ninterface IEsperGenCharacterTraitsSheetState {\n  character: EsperGenCharacter\n}\n\nconst initialState: IEsperGenCharacterTraitsSheetState = {\n  character: {}\n}\n\nclass EsperGenCharacterTraitsSheet extends React.Component<\n  IEsperGenCharacterTraitsSheetProps,\n  IEsperGenCharacterTraitsSheetState\n> {\n  constructor(props: IEsperGenCharacterTraitsSheetProps) {\n    super(props)\n    if (props.defaultCharacter) {\n      initialState.character = props.defaultCharacter\n    }\n    this.state = initialState\n  }\n\n  updateCharacter(name: string, value: any) {\n    const oldCharacter = this.getCharacter()\n    const newCharacter: EsperGenCharacter = {}\n    Object.assign(newCharacter, oldCharacter)\n    newCharacter[name] = value\n\n    if (!this.props.character) {\n      // NOT CONTROLLED\n      this.setState({ character: newCharacter })\n    }\n\n    if (typeof this.props.onCharacterChanged === 'function') {\n      this.props.onCharacterChanged(newCharacter, name, value)\n    }\n  }\n\n  getCharacter() {\n    // NOT CONTROLLED\n    let character = this.state.character\n    if (this.props.character) {\n      // CONTROLLED\n      character = this.props.character\n    }\n    return character\n  }\n\n  render() {\n    const character = this.getCharacter()\n\n    return (\n      <div className='espergen-character-sheet container-xl mt-5 mb-5'>\n        <div>\n          <div className='row'>\n            <div className='col-md-6'>\n              <div\n                className='upper1 mb-2'\n                style={{\n                  fontSize: '20px'\n                }}\n              >\n                <span>C</span>haracter <span>T</span>raits\n              </div>\n\n              <div\n                className='upper1'\n                style={{\n                  fontSize: '12px',\n                  fontWeight: 'normal'\n                }}\n              >\n                <span>R</span>acial <span>F</span>eatures\n              </div>\n              <div className='espergen-box mb-2'>\n                <textarea\n                  value={\n                    character.racialFeatures ? character.racialFeatures : ''\n                  }\n                  onChange={(e) =>\n                    this.updateCharacter('racialFeatures', e.target.value)\n                  }\n                  rows={10}\n                />\n              </div>\n\n              <div\n                className='upper1'\n                style={{\n                  fontSize: '12px',\n                  fontWeight: 'normal'\n                }}\n              >\n                <span>C</span>lass <span>F</span>eatures\n              </div>\n              <div className='espergen-box mb-2'>\n                <textarea\n                  value={character.classFeatures ? character.classFeatures : ''}\n                  onChange={(e) =>\n                    this.updateCharacter('classFeatures', e.target.value)\n                  }\n                  rows={25}\n                />\n              </div>\n\n              <div\n                className='upper1 mb-2 mt-4'\n                style={{\n                  fontSize: '12px',\n                  fontWeight: 'normal'\n                }}\n              >\n                <span>P</span>roficiencies\n              </div>\n              <div>\n                <label\n                  className='mb-0'\n                  style={{ textTransform: 'uppercase', width: '48px' }}\n                >\n                  Armour\n                </label>\n\n                <label\n                  htmlFor='profArmourLight'\n                  className='text-uppercase ml-3 mr-3 mb-0'\n                  style={{ width: '65px' }}\n                >\n                  <input\n                    type='checkbox'\n                    id='profArmourLight'\n                    checked={character.profArmourLight}\n                    onClick={() =>\n                      this.updateCharacter(\n                        'profArmourLight',\n                        !character.profArmourLight\n                      )\n                    }\n                  />\n                  Light\n                </label>\n\n                <label\n                  htmlFor='profArmourMedium'\n                  className='text-uppercase ml-2 mr-3 mb-0'\n                  style={{ width: '65px' }}\n                >\n                  <input\n                    type='checkbox'\n                    id='profArmourMedium'\n                    checked={character.profArmourMedium}\n                    onClick={() =>\n                      this.updateCharacter(\n                        'profArmourMedium',\n                        !character.profArmourMedium\n                      )\n                    }\n                  />\n                  Medium\n                </label>\n\n                <label\n                  htmlFor='profArmourHeavy'\n                  className='text-uppercase ml-2 mr-3 mb-0'\n                  style={{ width: '65px' }}\n                >\n                  <input\n                    type='checkbox'\n                    id='profArmourHeavy'\n                    checked={character.profArmourHeavy}\n                    onClick={() =>\n                      this.updateCharacter(\n                        'profArmourHeavy',\n                        !character.profArmourHeavy\n                      )\n                    }\n                  />\n                  Heavy\n                </label>\n\n                <label\n                  htmlFor='profArmourShield'\n                  className='text-uppercase ml-2 mr-3 mb-0'\n                  style={{ width: '65px' }}\n                >\n                  <input\n                    type='checkbox'\n                    id='profArmourShield'\n                    checked={character.profArmourShield}\n                    onClick={() =>\n                      this.updateCharacter(\n                        'profArmourShield',\n                        !character.profArmourShield\n                      )\n                    }\n                  />\n                  Shields\n                </label>\n              </div>\n\n              <hr\n                className='espergen-seperator'\n                style={{ height: '0px', margin: '1px 0' }}\n              />\n\n              <div className='mt-1'>\n                <label\n                  className='mb-0'\n                  style={{ textTransform: 'uppercase', width: '48px' }}\n                >\n                  Weapon\n                </label>\n\n                <label\n                  htmlFor='profWeaponSimple'\n                  className='text-uppercase ml-3 mr-3 mb-0'\n                  style={{ width: '65px' }}\n                >\n                  <input\n                    type='checkbox'\n                    id='profWeaponSimple'\n                    checked={character.profWeaponSimple}\n                    onClick={() =>\n                      this.updateCharacter(\n                        'profWeaponSimple',\n                        !character.profWeaponSimple\n                      )\n                    }\n                  />\n                  Simple\n                </label>\n\n                <label\n                  htmlFor='profWeaponMartial'\n                  className='text-uppercase ml-2 mr-3 mb-0'\n                  style={{ width: '65px' }}\n                >\n                  <input\n                    type='checkbox'\n                    id='profWeaponMartial'\n                    checked={character.profWeaponMartial}\n                    onClick={() =>\n                      this.updateCharacter(\n                        'profWeaponMartial',\n                        !character.profWeaponMartial\n                      )\n                    }\n                  />\n                  Martial\n                </label>\n\n                <label\n                  htmlFor='profWeaponOther'\n                  className='text-uppercase ml-2 mr-3 mb-0'\n                  style={{ width: '65px' }}\n                >\n                  <input\n                    type='checkbox'\n                    id='profWeaponOther'\n                    checked={character.profWeaponOther}\n                    onClick={() =>\n                      this.updateCharacter(\n                        'profWeaponOther',\n                        !character.profWeaponOther\n                      )\n                    }\n                  />\n                  Other\n                </label>\n\n                <input\n                  type='text'\n                  className='ml-2'\n                  style={{ width: '150px' }}\n                  id='profWeaponOtherText'\n                  value={character.profWeaponOtherText}\n                  onChange={(e) =>\n                    this.updateCharacter('profWeaponOtherText', e.target.value)\n                  }\n                />\n              </div>\n\n              <hr\n                className='espergen-seperator'\n                style={{ height: '0px', margin: '1px 0' }}\n              />\n\n              <div className='row text-center'>\n                <div className='col-md-6 pr-md-2'>\n                  <div\n                    className='upper1 mt-1'\n                    style={{\n                      fontWeight: 'normal',\n                      fontSize: '12px'\n                    }}\n                  >\n                    <span>L</span>anguages\n                  </div>\n                  <hr\n                    className='espergen-seperator'\n                    style={{ height: '0px', marginTop: '0px' }}\n                  />\n\n                  <div className='row'>\n                    <div className='col-6 pr-2'>\n                      <input\n                        type='text'\n                        style={{ width: '100%' }}\n                        className='espergen-linput'\n                        value={character.language1 ? character.language1 : ''}\n                        onChange={(e) =>\n                          this.updateCharacter('language1', e.target.value)\n                        }\n                      />\n                      <input\n                        type='text'\n                        style={{ width: '100%' }}\n                        className='espergen-linput'\n                        value={character.language2 ? character.language2 : ''}\n                        onChange={(e) =>\n                          this.updateCharacter('language2', e.target.value)\n                        }\n                      />\n                      <input\n                        type='text'\n                        style={{ width: '100%' }}\n                        className='espergen-linput'\n                        value={character.language3 ? character.language3 : ''}\n                        onChange={(e) =>\n                          this.updateCharacter('language3', e.target.value)\n                        }\n                      />\n                    </div>\n                    <div className='col-6 pl-2'>\n                      <input\n                        type='text'\n                        style={{ width: '100%' }}\n                        className='espergen-linput'\n                        value={character.language4 ? character.language4 : ''}\n                        onChange={(e) =>\n                          this.updateCharacter('language4', e.target.value)\n                        }\n                      />\n                      <input\n                        type='text'\n                        style={{ width: '100%' }}\n                        className='espergen-linput'\n                        value={character.language5 ? character.language5 : ''}\n                        onChange={(e) =>\n                          this.updateCharacter('language5', e.target.value)\n                        }\n                      />\n                      <input\n                        type='text'\n                        style={{ width: '100%' }}\n                        className='espergen-linput'\n                        value={character.language6 ? character.language6 : ''}\n                        onChange={(e) =>\n                          this.updateCharacter('language6', e.target.value)\n                        }\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div className='col-md-6 pl-md-2'>\n                  <div\n                    className='upper1 mt-1'\n                    style={{\n                      fontWeight: 'normal',\n                      fontSize: '12px'\n                    }}\n                  >\n                    <span>T</span>ools\n                  </div>\n                  <hr\n                    className='espergen-seperator'\n                    style={{ height: '0px', marginTop: '0px' }}\n                  />\n\n                  <div className='row'>\n                    <div className='col-6 pr-2'>\n                      <input\n                        type='text'\n                        style={{ width: '100%' }}\n                        className='espergen-linput'\n                        value={character.tool1 ? character.tool1 : ''}\n                        onChange={(e) =>\n                          this.updateCharacter('tool1', e.target.value)\n                        }\n                      />\n                      <input\n                        type='text'\n                        style={{ width: '100%' }}\n                        className='espergen-linput'\n                        value={character.tool2 ? character.tool2 : ''}\n                        onChange={(e) =>\n                          this.updateCharacter('tool2', e.target.value)\n                        }\n                      />\n                      <input\n                        type='text'\n                        style={{ width: '100%' }}\n                        className='espergen-linput'\n                        value={character.tool3 ? character.tool3 : ''}\n                        onChange={(e) =>\n                          this.updateCharacter('tool3', e.target.value)\n                        }\n                      />\n                    </div>\n                    <div className='col-6 pl-2'>\n                      <input\n                        type='text'\n                        style={{ width: '100%' }}\n                        className='espergen-linput'\n                        value={character.tool4 ? character.tool4 : ''}\n                        onChange={(e) =>\n                          this.updateCharacter('tool4', e.target.value)\n                        }\n                      />\n                      <input\n                        type='text'\n                        style={{ width: '100%' }}\n                        className='espergen-linput'\n                        value={character.tool5 ? character.tool5 : ''}\n                        onChange={(e) =>\n                          this.updateCharacter('tool5', e.target.value)\n                        }\n                      />\n                      <input\n                        type='text'\n                        style={{ width: '100%' }}\n                        className='espergen-linput'\n                        value={character.tool6 ? character.tool6 : ''}\n                        onChange={(e) =>\n                          this.updateCharacter('tool6', e.target.value)\n                        }\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className='col-md-6'>\n              <div\n                className='upper1 mb-2'\n                style={{\n                  fontSize: '16px'\n                }}\n              >\n                <span>B</span>ackground\n              </div>\n\n              <div style={{ position: 'relative' }}>\n                <label\n                  style={{\n                    position: 'absolute',\n                    top: '7px',\n                    textTransform: 'uppercase'\n                  }}\n                >\n                  Personality Trait\n                </label>\n                <textarea\n                  className='espergen-linedtextarea'\n                  style={{ textIndent: '130px' }}\n                  value={\n                    character.personalityTraits\n                      ? character.personalityTraits\n                      : ''\n                  }\n                  onChange={(e) =>\n                    this.updateCharacter('personalityTraits', e.target.value)\n                  }\n                  rows={3}\n                />\n              </div>\n              <div className='mb-2' style={{ position: 'relative' }}>\n                <label\n                  style={{\n                    position: 'absolute',\n                    top: '7px',\n                    textTransform: 'uppercase'\n                  }}\n                >\n                  Ideal\n                </label>\n                <textarea\n                  className='espergen-linedtextarea'\n                  style={{ textIndent: '55px' }}\n                  value={character.ideals ? character.ideals : ''}\n                  onChange={(e) =>\n                    this.updateCharacter('ideals', e.target.value)\n                  }\n                  rows={2}\n                />\n              </div>\n\n              <div style={{ position: 'relative' }}>\n                <label\n                  style={{\n                    position: 'absolute',\n                    top: '7px',\n                    textTransform: 'uppercase'\n                  }}\n                >\n                  Bond\n                </label>\n                <textarea\n                  className='espergen-linedtextarea'\n                  style={{ textIndent: '55px' }}\n                  value={character.bonds ? character.bonds : ''}\n                  onChange={(e) =>\n                    this.updateCharacter('bonds', e.target.value)\n                  }\n                  rows={3}\n                />\n              </div>\n              <div className='mb-2' style={{ position: 'relative' }}>\n                <label\n                  style={{\n                    position: 'absolute',\n                    top: '7px',\n                    textTransform: 'uppercase'\n                  }}\n                >\n                  Flaw\n                </label>\n                <textarea\n                  className='espergen-linedtextarea'\n                  style={{ textIndent: '55px' }}\n                  value={character.flaws ? character.flaws : ''}\n                  onChange={(e) =>\n                    this.updateCharacter('flaws', e.target.value)\n                  }\n                  rows={3}\n                />\n              </div>\n\n              <div\n                className='upper1'\n                style={{\n                  fontSize: '12px',\n                  fontWeight: 'normal'\n                }}\n              >\n                <span>B</span>ackground <span>F</span>eature\n              </div>\n              <div className='espergen-box mb-2'>\n                <textarea\n                  value={\n                    character.backgroundFeature\n                      ? character.backgroundFeature\n                      : ''\n                  }\n                  onChange={(e) =>\n                    this.updateCharacter('backgroundFeature', e.target.value)\n                  }\n                  rows={8}\n                />\n              </div>\n\n              <div\n                className='upper1 mb-2 mt-3'\n                style={{\n                  fontSize: '16px'\n                }}\n              >\n                <span>F</span>eats\n              </div>\n\n              <div style={{ position: 'relative' }}>\n                <label\n                  style={{\n                    position: 'absolute',\n                    top: '7px',\n                    textTransform: 'uppercase'\n                  }}\n                >\n                  Feat:\n                </label>\n                <textarea\n                  className='espergen-linedtextarea'\n                  style={{ textIndent: '40px' }}\n                  value={character.feat1 ? character.feat1 : ''}\n                  onChange={(e) =>\n                    this.updateCharacter('feat1', e.target.value)\n                  }\n                  rows={3}\n                />\n              </div>\n              <div className='mb-2' style={{ position: 'relative' }}>\n                <label\n                  style={{\n                    position: 'absolute',\n                    top: '7px',\n                    textTransform: 'uppercase'\n                  }}\n                >\n                  Feat:\n                </label>\n                <textarea\n                  className='espergen-linedtextarea'\n                  style={{ textIndent: '40px' }}\n                  value={character.feat2 ? character.feat2 : ''}\n                  onChange={(e) =>\n                    this.updateCharacter('feat2', e.target.value)\n                  }\n                  rows={2}\n                />\n              </div>\n\n              <div style={{ position: 'relative' }}>\n                <label\n                  style={{\n                    position: 'absolute',\n                    top: '7px',\n                    textTransform: 'uppercase'\n                  }}\n                >\n                  Feat:\n                </label>\n                <textarea\n                  className='espergen-linedtextarea'\n                  style={{ textIndent: '40px' }}\n                  value={character.feat3 ? character.feat3 : ''}\n                  onChange={(e) =>\n                    this.updateCharacter('feat3', e.target.value)\n                  }\n                  rows={3}\n                />\n              </div>\n              <div className='mb-2' style={{ position: 'relative' }}>\n                <label\n                  style={{\n                    position: 'absolute',\n                    top: '7px',\n                    textTransform: 'uppercase'\n                  }}\n                >\n                  Feat:\n                </label>\n                <textarea\n                  className='espergen-linedtextarea'\n                  style={{ textIndent: '40px' }}\n                  value={character.feat4 ? character.feat4 : ''}\n                  onChange={(e) =>\n                    this.updateCharacter('feat4', e.target.value)\n                  }\n                  rows={3}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className='row'>\n            <div className='col-md-6'>\n              <div\n                className='upper1 mb-2 mt-2'\n                style={{\n                  fontSize: '20px'\n                }}\n              >\n                <span>E</span>quipment\n              </div>\n\n              <div\n                className='upper1 mb-2'\n                style={{\n                  fontSize: '12px',\n                  fontWeight: 'normal'\n                }}\n              >\n                <span>A</span>dventuring <span>G</span>ear\n              </div>\n\n              <GearTable\n                rows={10}\n                name='gear1'\n                value={character.gear1}\n                onChange={(name: string, value: any) => {\n                  this.updateCharacter(name, value)\n                }}\n              />\n\n              <div className='mt-3'>\n                <VehiclesTable\n                  rows={3}\n                  name='vehicles'\n                  value={character.vehicles}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className='col-md-6'>\n              <div className='text-center mt-1 mb-1'>\n                <div className='espergen-coin mr-2' />\n                <label\n                  className='text-uppercase mr-2 mb-0'\n                  style={{ verticalAlign: 'middle', fontSize: '12px' }}\n                >\n                  <b>\n                    Total\n                    <br />\n                    Cubil (CU)\n                  </b>\n                </label>\n                <input\n                  type='text'\n                  style={{ height: '36px', width: '50px' }}\n                  className='espergen-binput'\n                  value={character.cu ? character.cu : ''}\n                  onChange={(e) => this.updateCharacter('cu', e.target.value)}\n                />\n              </div>\n\n              <div\n                className='text-center mt-3'\n                style={{ marginBottom: '11px' }}\n              >\n                <label className='text-uppercase mr-1'>Lifestyle:</label>\n                <input\n                  type='text'\n                  style={{ width: '150px' }}\n                  className='espergen-linput'\n                  value={character.lifestyle ? character.lifestyle : ''}\n                  onChange={(e) =>\n                    this.updateCharacter('lifestyle', e.target.value)\n                  }\n                />\n                <label className='text-uppercase mr-1 ml-3'>\n                  Daily Expenses:\n                </label>\n                <input\n                  type='text'\n                  style={{ width: '150px' }}\n                  className='espergen-linput'\n                  value={character.dailyExpenses ? character.dailyExpenses : ''}\n                  onChange={(e) =>\n                    this.updateCharacter('dailyExpenses', e.target.value)\n                  }\n                />\n              </div>\n\n              <GearTable\n                rows={10}\n                name='gear2'\n                value={character.gear2}\n                onChange={(name: string, value: any) => {\n                  this.updateCharacter(name, value)\n                }}\n              />\n              <div\n                className='espergen-box'\n                style={{ borderTop: 'none', width: 'calc(100% + 1px)' }}\n              >\n                <label className='text-uppercase mb-0'>Other Valuables</label>\n                <textarea\n                  value={\n                    character.otherValuables ? character.otherValuables : ''\n                  }\n                  onChange={(e) =>\n                    this.updateCharacter('otherValuables', e.target.value)\n                  }\n                  rows={2}\n                />\n              </div>\n\n              <div className='text-center mt-2'>\n                <div className='ml-2 mr-2' style={{ display: 'inline-block' }}>\n                  <label\n                    className='mb-0 text-center w-100'\n                    style={{ fontSize: '9px' }}\n                  >\n                    Total WT.\n                  </label>\n                  <br />\n                  <input\n                    type='text'\n                    style={{ height: '24px', width: '50px' }}\n                    className='espergen-binput'\n                    value={character.totalWeight ? character.totalWeight : ''}\n                    onChange={(e) =>\n                      this.updateCharacter('totalWeight', e.target.value)\n                    }\n                  />\n                </div>\n                <div className='ml-2' style={{ display: 'inline-block' }}>\n                  <label\n                    className='mb-0 text-center w-100'\n                    style={{ fontSize: '9px' }}\n                  >\n                    Encumbered\n                  </label>\n                  <br />\n                  <input\n                    type='text'\n                    style={{ height: '24px', width: '50px' }}\n                    className='espergen-binput'\n                    value={character.encumbered ? character.encumbered : ''}\n                    onChange={(e) =>\n                      this.updateCharacter('encumbered', e.target.value)\n                    }\n                  />\n                </div>\n\n                <label\n                  className='mb-0 text-center'\n                  style={{\n                    width: '60px',\n                    fontSize: '8px',\n                    verticalAlign: 'middle'\n                  }}\n                >\n                  = Str x 5\n                  <br />- 10 Spd.\n                </label>\n\n                <div style={{ display: 'inline-block' }}>\n                  <label\n                    className='mb-0 text-center w-100'\n                    style={{ fontSize: '9px' }}\n                  >\n                    Heavily Enc.\n                  </label>\n                  <br />\n                  <input\n                    type='text'\n                    style={{ height: '24px', width: '50px' }}\n                    className='espergen-binput'\n                    value={\n                      character.heavyEncumbered ? character.heavyEncumbered : ''\n                    }\n                    onChange={(e) =>\n                      this.updateCharacter('heavyEncumbered', e.target.value)\n                    }\n                  />\n                </div>\n\n                <label\n                  className='mb-0 text-center'\n                  style={{\n                    width: '60px',\n                    fontSize: '8px',\n                    verticalAlign: 'middle'\n                  }}\n                >\n                  = Str x 10\n                  <br />- 20 Spd.\n                </label>\n\n                <div style={{ display: 'inline-block' }}>\n                  <label\n                    className='mb-0 text-center w-100'\n                    style={{ fontSize: '9px' }}\n                  >\n                    Push/Lift\n                  </label>\n                  <br />\n                  <input\n                    type='text'\n                    style={{ height: '24px', width: '50px' }}\n                    className='espergen-binput'\n                    value={character.pushLift ? character.pushLift : ''}\n                    onChange={(e) =>\n                      this.updateCharacter('pushLift', e.target.value)\n                    }\n                  />\n                </div>\n\n                <label\n                  className='mb-0 text-center'\n                  style={{\n                    width: '80px',\n                    fontSize: '8px',\n                    verticalAlign: 'middle'\n                  }}\n                >\n                  = (Str x 15) - 30\n                  <br />\n                  Spd. = 5ft.\n                </label>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default EsperGenCharacterTraitsSheet\n","/* eslint-disable prettier/prettier */\nimport React from 'react'\n\nfunction TalentTable(props: {\n  onChange: (arg0: any, arg1: any) => void\n  name: string\n  label: string\n  tp?: number\n  level: number\n  value?: any\n  classes?: string\n  rows: number\n  style?: React.CSSProperties | undefined\n}) {\n  function updateValue(index: React.Key, field: string, v: string | boolean) {\n    const value = getValue().slice()\n    value[index][field] = v\n    props.onChange(props.name, value)\n  }\n\n  function getValue() {\n    let value = props.value\n    if (!value) {\n      value = []\n    }\n    while (value.length < props.rows) {\n      value.push({})\n    }\n    return value\n  }\n\n  let classes = 'espergen-talentlist'\n  if (props.classes) {\n    classes += ' ' + props.classes\n  }\n\n  return (\n    <div className={classes} style={props.style}>\n      <div className='espergen-talent-header'>\n        {props.tp ? <label className='tp'>TP:{props.tp}</label> : null}\n        <label className='mb-0'>{props.label}</label>\n      </div>\n\n      <table>\n        <tbody>\n          {getValue().map(\n            (\n              v: {\n                name: string | number | readonly string[] | undefined\n                prepared: boolean | undefined\n              },\n              index: string\n            ) => {\n              return (\n                <tr key={'espergen-table-row-' + props.name + index}>\n                  {props.level > 0 ? (\n                    <td className='espergen-talent-prepared'>\n                      <div\n                        className={\n                          v.prepared\n                            ? 'espergen-skill-circle active'\n                            : 'espergen-skill-circle'\n                        }\n                        onClick={() =>\n                          updateValue(index, 'prepared', !v.prepared)\n                        }\n                      />\n                    </td>\n                  ) : null}\n                  <td>\n                    <input\n                      type='text'\n                      value={v.name ? v.name : ''}\n                      onChange={(e) =>\n                        updateValue(index, 'name', e.target.value)\n                      }\n                    />\n                  </td>\n                </tr>\n              )\n            }\n          )}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default TalentTable\n","import React from 'react'\n\nfunction TechniqueTable(props: {\n  onChange: (arg0: any, arg1: any) => void\n  maxName: string\n  usedName: string\n  max?: any\n  used?: any\n  classes?: string\n}) {\n  function updateValue(index: React.Key, field: string, v: string) {\n    const value = getValue().slice()\n    value[index][field] = v\n    if (index === 0) {\n      props.onChange(props.maxName, value[index])\n    } else {\n      props.onChange(props.usedName, value[index])\n    }\n  }\n\n  function getValue() {\n    let max = props.max\n    if (max == null) {\n      max = {}\n    }\n    let used = props.used\n    if (used == null) {\n      used = {}\n    }\n    return [max, used]\n  }\n\n  let classes = 'espergen-technique-table'\n  if (props.classes) {\n    classes += ' ' + props.classes\n  }\n\n  return (\n    <table className={classes}>\n      <thead>\n        <tr>\n          <th style={{ width: '50px' }} />\n          <th>1st</th>\n          <th>2nd</th>\n          <th>3rd</th>\n          <th>4th</th>\n          <th>5th</th>\n          <th>6th</th>\n          <th>7th</th>\n          <th>8th</th>\n          <th>9th</th>\n        </tr>\n      </thead>\n      <tbody>\n        {getValue().map(\n          (\n            v: {\n              lvl1: string | number | readonly string[] | undefined\n              lvl2: string | number | readonly string[] | undefined\n              lvl3: string | number | readonly string[] | undefined\n              lvl4: string | number | readonly string[] | undefined\n              lvl5: string | number | readonly string[] | undefined\n              lvl6: string | number | readonly string[] | undefined\n              lvl7: string | number | readonly string[] | undefined\n              lvl8: string | number | readonly string[] | undefined\n              lvl9: string | number | readonly string[] | undefined\n            },\n            index: number\n          ) => {\n            return (\n              <tr key={'espergen-table-row-' + props.maxName + index}>\n                <td style={{ fontWeight: 'bold' }}>\n                  {index === 0 ? 'Max' : 'Used'}\n                </td>\n                <td>\n                  <input\n                    type='text'\n                    value={v.lvl1 ? v.lvl1 : ''}\n                    onChange={(e) => updateValue(index, 'lvl1', e.target.value)}\n                  />\n                </td>\n                <td>\n                  <input\n                    type='text'\n                    value={v.lvl2 ? v.lvl2 : ''}\n                    onChange={(e) => updateValue(index, 'lvl2', e.target.value)}\n                  />\n                </td>\n                <td>\n                  <input\n                    type='text'\n                    value={v.lvl3 ? v.lvl3 : ''}\n                    onChange={(e) => updateValue(index, 'lvl3', e.target.value)}\n                  />\n                </td>\n                <td>\n                  <input\n                    type='text'\n                    value={v.lvl4 ? v.lvl4 : ''}\n                    onChange={(e) => updateValue(index, 'lvl4', e.target.value)}\n                  />\n                </td>\n                <td>\n                  <input\n                    type='text'\n                    value={v.lvl5 ? v.lvl5 : ''}\n                    onChange={(e) => updateValue(index, 'lvl5', e.target.value)}\n                  />\n                </td>\n                <td>\n                  <input\n                    type='text'\n                    value={v.lvl6 ? v.lvl6 : ''}\n                    onChange={(e) => updateValue(index, 'lvl6', e.target.value)}\n                  />\n                </td>\n                <td>\n                  <input\n                    type='text'\n                    value={v.lvl7 ? v.lvl7 : ''}\n                    onChange={(e) => updateValue(index, 'lvl7', e.target.value)}\n                  />\n                </td>\n                <td>\n                  <input\n                    type='text'\n                    value={v.lvl8 ? v.lvl8 : ''}\n                    onChange={(e) => updateValue(index, 'lvl8', e.target.value)}\n                  />\n                </td>\n                <td>\n                  <input\n                    type='text'\n                    value={v.lvl9 ? v.lvl9 : ''}\n                    onChange={(e) => updateValue(index, 'lvl9', e.target.value)}\n                  />\n                </td>\n              </tr>\n            )\n          }\n        )}\n      </tbody>\n    </table>\n  )\n}\n\nexport default TechniqueTable\n","import React from 'react'\nimport TalentTable from './Components/TalentTable'\nimport TechniqueTable from './Components/TechniqueTable'\n\n// eslint-disable-next-line no-unused-vars\nimport EsperGenCharacter from './EsperGenCharacter'\n\nimport './espergenstyles.css'\n\ninterface IEsperGenCharacterTalentsSheetProps {\n  character?: EsperGenCharacter\n  defaultCharacter?: EsperGenCharacter\n  onCharacterChanged?: (\n    character: EsperGenCharacter,\n    changedField: string,\n    newValue: any\n  ) => void\n}\n\ninterface IEsperGenCharacterTalentsSheetState {\n  character: EsperGenCharacter\n}\n\nconst initialState: IEsperGenCharacterTalentsSheetState = {\n  character: {}\n}\n\nclass EsperGenCharacterTalentsSheet extends React.Component<\n  IEsperGenCharacterTalentsSheetProps,\n  IEsperGenCharacterTalentsSheetState\n> {\n  constructor(props: IEsperGenCharacterTalentsSheetProps) {\n    super(props)\n    if (props.defaultCharacter) {\n      initialState.character = props.defaultCharacter\n    }\n    this.state = initialState\n  }\n\n  updateCharacter(name: string, value: any) {\n    const oldCharacter = this.getCharacter()\n    const newCharacter: EsperGenCharacter = {}\n    Object.assign(newCharacter, oldCharacter)\n    newCharacter[name] = value\n\n    if (!this.props.character) {\n      // NOT CONTROLLED\n      this.setState({ character: newCharacter })\n    }\n\n    if (typeof this.props.onCharacterChanged === 'function') {\n      this.props.onCharacterChanged(newCharacter, name, value)\n    }\n  }\n\n  getCharacter() {\n    // NOT CONTROLLED\n    let character = this.state.character\n    if (this.props.character) {\n      // CONTROLLED\n      character = this.props.character\n    }\n    return character\n  }\n\n  render() {\n    const character = this.getCharacter()\n\n    return (\n      <div className='espergen-character-sheet container-xl mt-5 mb-5'>\n        <div>\n          <div className='row'>\n            <div className='col-md-5 pr-md-1'>\n              <label style={{ width: '130px', fontSize: '16px' }}>\n                Character Name:{' '}\n              </label>\n              <input\n                type='text'\n                style={{ width: 'calc(100% - 130px)', fontSize: '16px' }}\n                className='espergen-linput mb-3'\n                value={character.name ? character.name : ''}\n                onChange={(e) => this.updateCharacter('name', e.target.value)}\n              />\n\n              <label style={{ width: '100px', fontSize: '16px' }}>\n                Esper Ability:{' '}\n              </label>\n              <input\n                type='text'\n                style={{ width: 'calc(100% - 100px)', fontSize: '16px' }}\n                className='espergen-linput'\n                value={character.forgingAbility ? character.forgingAbility : ''}\n                onChange={(e) =>\n                  this.updateCharacter('forgingAbility', e.target.value)\n                }\n              />\n            </div>\n            <div className='col-md-7 pl-md-1'>\n              <div className='row'>\n                <div className='col-md-6 pr-md-1 text-center'>\n                  <div\n                    className='upper1'\n                    style={{\n                      fontSize: '18px',\n                      lineHeight: '20px'\n                    }}\n                  >\n                    <span>E</span>sper <span>A</span>ttack <span>M</span>odifier\n                  </div>\n                  <label className='text-uppercase'>\n                    (Channeling or Forging)\n                  </label>\n\n                  <div>\n                    <div className='espergen-round-input large ml-2 mr-2'>\n                      <input\n                        type='text'\n                        value={\n                          character.esperAttackModifier\n                            ? character.esperAttackModifier\n                            : ''\n                        }\n                        onChange={(e) =>\n                          this.updateCharacter(\n                            'esperAttackModifier',\n                            e.target.value\n                          )\n                        }\n                      />\n                    </div>\n                    <label\n                      className='mb-0 text-center'\n                      style={{\n                        fontSize: '12px',\n                        verticalAlign: 'middle'\n                      }}\n                    >\n                      = Proficiency Bonus + your\n                      <br />\n                      Channeling/Forging ability bonus\n                    </label>\n                  </div>\n                </div>\n\n                <div className='col-md-6 pl-md-1 text-center'>\n                  <div\n                    className='upper1'\n                    style={{\n                      fontSize: '18px',\n                      lineHeight: '20px'\n                    }}\n                  >\n                    <span>E</span>sper <span>P</span>ower <span>S</span>ave{' '}\n                    <span>DC</span>\n                  </div>\n                  <label\n                    className='text-uppercase mb-1'\n                    style={{ minHeight: '16px' }}\n                  >\n                    {' '}\n                  </label>\n\n                  <div>\n                    <div className='espergen-round-input large ml-2 mr-2'>\n                      <input\n                        type='text'\n                        value={\n                          character.esperPowerDc ? character.esperPowerDc : ''\n                        }\n                        onChange={(e) =>\n                          this.updateCharacter('esperPowerDc', e.target.value)\n                        }\n                      />\n                    </div>\n                    <label\n                      className='mb-0 text-center'\n                      style={{\n                        fontSize: '12px',\n                        verticalAlign: 'middle'\n                      }}\n                    >\n                      = 8 + Proficiency Bonus + your\n                      <br />\n                      Channeling/Forging ability bonus\n                    </label>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className='row mt-3'>\n            <div className='col-md-5 pr-md-5'>\n              <div\n                className='upper1'\n                style={{\n                  fontSize: '18px'\n                }}\n              >\n                <span>T</span>alent <span>P</span>oints\n              </div>\n\n              <div className='espergen-box'>\n                <div\n                  style={{\n                    display: 'inline-block',\n                    verticalAlign: 'top'\n                  }}\n                >\n                  <input\n                    type='text'\n                    style={{ height: '36px', width: '70px' }}\n                    className='espergen-binput'\n                    value={character.maxTp ? character.maxTp : ''}\n                    onChange={(e) =>\n                      this.updateCharacter('maxTp', e.target.value)\n                    }\n                  />\n                  <br />\n                  <label className='text-center' style={{ width: '70px' }}>\n                    Max TP\n                  </label>\n                </div>\n                <div\n                  style={{\n                    display: 'inline-block',\n                    width: 'calc(100% - 70px)',\n                    padding: '0 10px'\n                  }}\n                >\n                  <label className='w-100 text-right mb-0'>Remaining</label>\n                  <textarea\n                    value={character.remainingTp ? character.remainingTp : ''}\n                    onChange={(e) =>\n                      this.updateCharacter('remainingTp', e.target.value)\n                    }\n                    rows={5}\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div className='col-md-7 pl-md-0 mt-3'>\n              <div\n                className='upper1 float-right pt-1 mr-4'\n                style={{\n                  fontSize: '16px'\n                }}\n              >\n                <span># T</span>echniques <span>P</span>repared:\n                <input\n                  type='text'\n                  style={{ width: '50px', textAlign: 'center' }}\n                  className='espergen-linput ml-1'\n                  value={\n                    character.techniquesPrepared\n                      ? character.techniquesPrepared\n                      : ''\n                  }\n                  onChange={(e) =>\n                    this.updateCharacter('techniquesPrepared', e.target.value)\n                  }\n                />\n              </div>\n              <div\n                className='upper1'\n                style={{\n                  fontSize: '18px',\n                  marginLeft: '50px'\n                }}\n              >\n                <span>T</span>ech <span>S</span>lots\n              </div>\n\n              <div className='mr-4 mt-1'>\n                <TechniqueTable\n                  maxName='techniqueSlots'\n                  max={character.techniqueSlots}\n                  usedName='techniqueSlotsUsed'\n                  used={character.techniqueSlotsUsed}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n\n          <hr className='espergen-page-break mt-3' />\n          <hr className='espergen-page-break' />\n\n          <div\n            className='upper1 text-center mb-3'\n            style={{\n              fontSize: '27px'\n            }}\n          >\n            <span>T</span>alents and <span>T</span>echniques\n          </div>\n\n          <div className='row'>\n            <div className='col-md-4'>\n              <div className=''>\n                <TalentTable\n                  level={0}\n                  rows={8}\n                  label='PRIME'\n                  name='primeTalents'\n                  value={character.primeTalents}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <TalentTable\n                  level={1}\n                  rows={12}\n                  tp={2}\n                  label='RANK 1'\n                  name='lvl1Talents'\n                  value={character.lvl1Talents}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <TalentTable\n                  level={2}\n                  rows={12}\n                  tp={3}\n                  label='RANK 2'\n                  name='lvl2Talents'\n                  value={character.lvl2Talents}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className='col-md-4'>\n              <div className=''>\n                <TalentTable\n                  level={3}\n                  rows={12}\n                  tp={5}\n                  label='RANK 3'\n                  name='lvl3Talents'\n                  value={character.lvl3Talents}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <TalentTable\n                  level={4}\n                  rows={12}\n                  tp={6}\n                  label='RANK 4'\n                  name='lvl4Talents'\n                  value={character.lvl4Talents}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <TalentTable\n                  level={5}\n                  rows={8}\n                  tp={7}\n                  label='RANK 5'\n                  name='lvl5Talents'\n                  value={character.lvl5Talents}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className='col-md-4'>\n              <div className=''>\n                <TalentTable\n                  level={6}\n                  rows={8}\n                  tp={9}\n                  label='RANK 6'\n                  name='lvl6Talents'\n                  value={character.lvl6Talents}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <TalentTable\n                  classes='mt-3'\n                  style={{ paddingBottom: '4px' }}\n                  level={7}\n                  rows={8}\n                  tp={10}\n                  label='RANK 7'\n                  name='lvl7Talents'\n                  value={character.lvl7Talents}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <TalentTable\n                  classes='mt-3'\n                  level={8}\n                  rows={7}\n                  tp={11}\n                  label='RANK 8'\n                  name='lvl8Talents'\n                  value={character.lvl8Talents}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n                <TalentTable\n                  classes='mt-4'\n                  level={9}\n                  rows={7}\n                  tp={13}\n                  label='RANK 9'\n                  name='lvl9Talents'\n                  value={character.lvl9Talents}\n                  onChange={(name: string, value: any) => {\n                    this.updateCharacter(name, value)\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default EsperGenCharacterTalentsSheet\n","import React, { useState, useEffect } from 'react'\nimport {\n  Switch,\n  Route,\n  Link,\n  withRouter,\n  Redirect,\n  useLocation\n} from 'react-router-dom'\nimport axios from 'axios'\nimport qs from 'qs'\n\nimport { EsperGenCharacterStatsSheet, EsperGenCharacterTraitsSheet, EsperGenCharacterTalentsSheet, EsperGenCharacter } from 'espergen-character-sheets'\nimport 'espergen-character-sheets/dist/index.css'\n\nfunction ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n\nconst App = (props: any) => {\n  const [character, setCharacter] = useState<EsperGenCharacter>(loadDefaultCharacter())\n  const [navTop, setNavTop] = useState<number>(0)\n  const [prevScrollpos, setPrevScrollpos] = useState<number>(window.pageYOffset)\n  const [, setLoading] = useState<boolean>(false)\n\n  const { search } = useLocation();\n  useEffect(() => {\n    const characterToLoad = qs.parse(search, { ignoreQueryPrefix: true }).character\n    if (characterToLoad) {\n      setLoading(true)\n      axios\n        .get('characters/' + characterToLoad + '.json')\n        .then((response: any) => {\n          setLoading(false)\n          try {\n            if (!Array.isArray(response.data) && typeof response.data === 'object') {\n              console.log('Loaded Character - ' + characterToLoad)\n              updateCharacter(response.data)\n            } else {\n              throw new Error('Json file does not contain a Genesis character.')\n            }\n          }\n          catch {\n            throw new Error('Json file does not contain a Genesis character.')\n          }\n        })\n        .catch((error: any) => {\n          console.log('Failed to load Character - ' + characterToLoad)\n          console.log(error)\n          setLoading(false)\n        })\n    }\n  }, [search]);\n\n  const statsSheet = (\n    <EsperGenCharacterStatsSheet\n      character={character}\n      onCharacterChanged={updateCharacter}\n    />\n  )\n  const profileSheet = (\n    <EsperGenCharacterTraitsSheet\n      character={character}\n      onCharacterChanged={updateCharacter}\n    />\n  )\n  const spellSheet = (\n    <EsperGenCharacterTalentsSheet\n      character={character}\n      onCharacterChanged={updateCharacter}\n    />\n  )\n\n  window.onscroll = function() {onScroll()};\n  function onScroll() {\n    var currentScrollPos = window.pageYOffset;\n    if (prevScrollpos > currentScrollPos || currentScrollPos < 20) {\n      setNavTop(0)\n    } else {\n      setNavTop(-280);\n    }\n    setPrevScrollpos(currentScrollPos)\n  }\n\n  function loadDefaultCharacter () {\n    let character: EsperGenCharacter = {}\n    const lsData = localStorage.getItem('espergen-character-data')\n    if (lsData) {\n      try {\n        character = JSON.parse(lsData)\n      } catch {}\n    }\n    return character\n  }\n\n  function updateCharacter (character: EsperGenCharacter) {\n    setCharacter(character)\n    localStorage.setItem('espergen-character-data', JSON.stringify(character))\n  }\n\n  function exportCharacter () {\n    const json = JSON.stringify(character, null, 2)\n\n    var a = document.createElement('a');\n    var file = new Blob([json], {type: 'application/json'});\n    a.href = URL.createObjectURL(file);\n    a.download = character.name ? character.name.replace(/[^a-z0-9]/gi, '_').toLowerCase() + '.json' : 'espergen-character.json';\n    a.click();\n  }\n\n\n  function importCharacter (event: any) {\n    if (event.target.files.length > 0){\n      var fr = new FileReader();\n\n      fr.onload = function(e) { \n        if (e.target && e.target.result && typeof e.target.result === 'string') {\n          loadCharacter(e.target.result)\n        }\n      }\n    \n      fr.readAsText(event.target.files[0]);\n    }\n  }\n\n  function loadCharacter(json: string) {\n    try {\n      var result = JSON.parse(typeof json === 'string' ? json : '{}');\n      if (!Array.isArray(result) && typeof result === 'object') {\n        updateCharacter(result)\n      } else {\n        window.alert('Json file does not contain a Esper Genesis character.')\n      }\n    }\n    catch {\n      window.alert('Json file does not contain a Esper Genesis character.')\n    }\n  }\n\n  function clearCharacter() {\n    updateCharacter({ })\n  }\n\n  function getDefaultRedirect(search: string | undefined) {\n    let defaultRedirect = '/stats' + search\n    if (window.innerWidth < 992) { \n      // is mobile device\n      defaultRedirect = '/all' + search\n    }\n    return defaultRedirect\n  }\n\n  return (\n    <div>\n      <nav className='navbar navbar-expand-lg navbar-dark fixed-top' style={{ backgroundColor: '#653294', top: navTop === 0 ? '' : navTop + 'px' }}>\n          <button className='navbar-toggler' type='button' data-toggle='collapse' data-target='#navbarSupportedContent' aria-controls='navbarSupportedContent' aria-expanded='false' aria-label='Toggle navigation'>\n              <span className='navbar-toggler-icon'></span>\n          </button>\n          <div style={{width:'100%'}}>\n            <div className='collapse navbar-collapse' id='navbarSupportedContent'>\n                <ul className='navbar-nav ml-lg-5' data-toggle='collapse' data-target='.navbar-collapse.show'>\n                    <li className='nav-item mr-lg-3'>\n                        <Link className={props.location.pathname === '/stats' ? 'nav-link active' : 'nav-link'} to='/stats'>Stats</Link>\n                    </li>\n                    <li className='nav-item mr-lg-3'>\n                        <Link className={props.location.pathname === '/traits' ? 'nav-link active' : 'nav-link'} to='/traits'>Traits</Link>\n                    </li>\n                    <li className='nav-item mr-lg-3'>\n                        <Link className={props.location.pathname === '/talents' ? 'nav-link active' : 'nav-link'} to='/talents'>Talents</Link>\n                    </li>\n                    <li className='nav-item mr-lg-3'>\n                        <Link className={props.location.pathname === '/all' ? 'nav-link active' : 'nav-link'} to='/all'>All</Link>\n                    </li>\n                </ul>\n\n                <ul className='navbar-nav ml-auto mr-lg-5' data-toggle='collapse' data-target='.navbar-collapse.show'>\n                    <li className='nav-item mr-lg-3'>\n                        <button className='btn btn-dark' onClick={() => exportCharacter()}>Export</button>\n                        <input style={{display: 'none'}} type=\"file\" id=\"selectFiles\" accept=\"application/json\" onChange={(e) => importCharacter(e)} />\n                        <button className='btn btn-dark' onClick={() => document.getElementById(\"selectFiles\")?.click()}>Import</button>\n                        <button className='btn btn-dark' onClick={() => window.print()}>Print</button>\n                        <button className='btn btn-danger' onClick={() => clearCharacter()}>Clear</button>\n                    </li>\n                </ul>\n            </div>\n          </div>\n      </nav>\n      <div className='app-holder'>\n\n        <Switch>\n          <Route exact path='/'>\n            <ScrollToTop />\n            <Redirect to={getDefaultRedirect(search)} />\n          </Route>\n          <Route exact path='/stats'>\n            <ScrollToTop />\n            {statsSheet}\n          </Route>\n          <Route exact path='/traits'>\n            <ScrollToTop />\n            {profileSheet}\n          </Route>\n          <Route exact path='/talents'>\n            <ScrollToTop />\n            {spellSheet}\n          </Route>\n          <Route exact path='/all'>\n            <ScrollToTop />\n            {statsSheet}\n            <div className='page-break' />\n            <div className='page-space' />\n            {profileSheet}\n            <div className='page-break' />\n            <div className='page-space' />\n            {spellSheet}\n          </Route>\n        </Switch>\n        \n\n      </div>\n      <footer className=\"no-print page-footer font-small text-white pt-4\" style={{ backgroundColor: '#7F4CAE' }}>\n        <div className=\"container-fluid container-xl text-center text-md-left mt-2 mb-3\">\n            <div className=\"row\">\n              <div className=\"col-md-6 mt-md-0 mt-3\">\n                <h5>Esper Genesis Character Sheets</h5>\n                <p>This page was created using espergen-character-sheets, an open source ReactJs library created by Daryl Buckle.</p>\n              </div>\n              <hr className=\"clearfix w-100 d-md-none pb-3\" />\n              <div className=\"col-md-3 mb-md-0 mb-3\">\n                <h5>Links</h5>\n                <ul className=\"list-unstyled\">\n                  <li>\n                    <a href=\"https://github.com/darylbuckle/espergen-character-sheets\">Source Code</a>\n                  </li>\n                  <li>\n                    <a href=\"https://www.npmjs.com/package/espergen-character-sheets\">Npm</a>\n                  </li>\n                  <li>\n                    <a href=\"https://github.com/darylbuckle\">Daryl Buckle</a>\n                  </li>\n                </ul>\n              </div>\n              <div className=\"col-md-3 mb-md-0 mb-3\">\n                <h5>Related</h5>\n                <ul className=\"list-unstyled\">\n                  <li>\n                    <a href=\"https://darylbuckle.github.io/dnd-character-sheets\">D&D Character Sheets</a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        <div className=\"footer-copyright text-center mt-5 py-2 text-white small\" style={{ backgroundColor: '#653294' }}>\n          MIT © Daryl Buckle 2020\n        </div>\n      </footer>\n    </div>\n    \n  )\n}\n\nexport default withRouter(App)\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nimport 'bootstrap/dist/css/bootstrap.css'\nimport { BrowserRouter as Router} from 'react-router-dom';\n\nReactDOM.render(<Router basename={'espergen-character-sheets'}><App /></Router>, document.getElementById('root'))"],"sourceRoot":""}